# From "Thinking in C++, 2nd Edition, Volume 2" 
# by Bruce Eckel & Chuck Allison
# Available at http://www.BruceEckel.com
# (c)2001 MindView Inc. Copyright notice in Copyright.txt
# Automatically-generated MAKEFILE 
# For examples in directory .\C01
# Invoke with: make compiler-name
# or: make clean

ifneq ($(MAKECMDGOALS),clean)
include ../$(MAKECMDGOALS).mac
endif

.SUFFIXES : .cpp .$(OBJEXT) .exe
.cpp.$(OBJEXT) :
	$(CPP) $(CPPFLAGS) $(OFLAGS) $<
.cpp.exe :
	$(CPP) $(CPPFLAGS) $< $(EXEFLAG)$@


Borland:  \
	Nonlocal.exe \
	Except.exe \
	Terminator.exe \
	Cleanup.exe \
	Rawp.exe \
	Wrapped.exe \
	Autoexcp.exe \
	Basexcpt.exe \
	Catchref.exe

Microsoft:  \
	Nonlocal.exe \
	Except.exe \
	Terminator.exe \
	Cleanup.exe \
	Rawp.exe \
	Wrapped.exe \
	Autoexcp.exe \
	Basexcpt.exe \
	Catchref.exe

g++295:  \
	Nonlocal.exe \
	Except.exe \
	Terminator.exe \
	FunctionTryBlock.exe \
	Cleanup.exe \
	Rawp.exe \
	Wrapped.exe \
	Autoexcp.exe \
	Basexcpt.exe \
	Catchref.exe

g++3:  \
	Nonlocal.exe \
	Except.exe \
	Terminator.exe \
	FunctionTryBlock.exe \
	Cleanup.exe \
	Rawp.exe \
	Wrapped.exe \
	Autoexcp.exe \
	Basexcpt.exe \
	Catchref.exe

edg:  \
	Nonlocal.exe \
	Except.exe \
	Terminator.exe \
	FunctionTryBlock.exe \
	Cleanup.exe \
	Rawp.exe \
	Wrapped.exe \
	Autoexcp.exe \
	Basexcpt.exe \
	Catchref.exe

clean:
ifeq ($(notdir $(SHELL)),COMMAND.COM)
	del *.obj
	del *.exe
	del *.tds
	del *.o
else
	rm -f *.o *.obj *.exe *.tds
endif


Nonlocal.exe: ../TestSuite/Test.$(OBJEXT) Nonlocal.$(OBJEXT)
	$(CPP) $(CPPFLAGS) $(EXEFLAG)Nonlocal.exe Nonlocal.$(OBJEXT) ../TestSuite/Test.$(OBJEXT)
ifneq ($(MAKECMDGOALS),Microsoft)
	Nonlocal.exe
endif

Nonlocal.$(OBJEXT): Nonlocal.cpp
Except.exe: ../TestSuite/Test.$(OBJEXT) Except.$(OBJEXT)
	$(CPP) $(CPPFLAGS) $(EXEFLAG)Except.exe Except.$(OBJEXT) ../TestSuite/Test.$(OBJEXT)
ifneq ($(MAKECMDGOALS),Microsoft)
	Except.exe
endif

Except.$(OBJEXT): Except.cpp
Terminator.exe: ../TestSuite/Test.$(OBJEXT) Terminator.$(OBJEXT)
	$(CPP) $(CPPFLAGS) $(EXEFLAG)Terminator.exe Terminator.$(OBJEXT) ../TestSuite/Test.$(OBJEXT)
ifneq ($(MAKECMDGOALS),Microsoft)
	Terminator.exe
endif

Terminator.$(OBJEXT): Terminator.cpp
FunctionTryBlock.exe: ../TestSuite/Test.$(OBJEXT) FunctionTryBlock.$(OBJEXT)
	$(CPP) $(CPPFLAGS) $(EXEFLAG)FunctionTryBlock.exe FunctionTryBlock.$(OBJEXT) ../TestSuite/Test.$(OBJEXT)
ifneq ($(MAKECMDGOALS),Microsoft)
	FunctionTryBlock.exe
endif

FunctionTryBlock.$(OBJEXT): FunctionTryBlock.cpp
Cleanup.exe: ../TestSuite/Test.$(OBJEXT) Cleanup.$(OBJEXT)
	$(CPP) $(CPPFLAGS) $(EXEFLAG)Cleanup.exe Cleanup.$(OBJEXT) ../TestSuite/Test.$(OBJEXT)
ifneq ($(MAKECMDGOALS),Microsoft)
	Cleanup.exe
endif

Cleanup.$(OBJEXT): Cleanup.cpp
Rawp.exe: ../TestSuite/Test.$(OBJEXT) Rawp.$(OBJEXT)
	$(CPP) $(CPPFLAGS) $(EXEFLAG)Rawp.exe Rawp.$(OBJEXT) ../TestSuite/Test.$(OBJEXT)
ifneq ($(MAKECMDGOALS),Microsoft)
	Rawp.exe
endif

Rawp.$(OBJEXT): Rawp.cpp
Wrapped.exe: ../TestSuite/Test.$(OBJEXT) Wrapped.$(OBJEXT)
	$(CPP) $(CPPFLAGS) $(EXEFLAG)Wrapped.exe Wrapped.$(OBJEXT) ../TestSuite/Test.$(OBJEXT)
ifneq ($(MAKECMDGOALS),Microsoft)
	Wrapped.exe
endif

Wrapped.$(OBJEXT): Wrapped.cpp
Autoexcp.exe: ../TestSuite/Test.$(OBJEXT) Autoexcp.$(OBJEXT)
	$(CPP) $(CPPFLAGS) $(EXEFLAG)Autoexcp.exe Autoexcp.$(OBJEXT) ../TestSuite/Test.$(OBJEXT)
ifneq ($(MAKECMDGOALS),Microsoft)
	Autoexcp.exe
endif

Autoexcp.$(OBJEXT): Autoexcp.cpp
Basexcpt.exe: ../TestSuite/Test.$(OBJEXT) Basexcpt.$(OBJEXT)
	$(CPP) $(CPPFLAGS) $(EXEFLAG)Basexcpt.exe Basexcpt.$(OBJEXT) ../TestSuite/Test.$(OBJEXT)
ifneq ($(MAKECMDGOALS),Microsoft)
	Basexcpt.exe
endif

Basexcpt.$(OBJEXT): Basexcpt.cpp
Catchref.exe: ../TestSuite/Test.$(OBJEXT) Catchref.$(OBJEXT)
	$(CPP) $(CPPFLAGS) $(EXEFLAG)Catchref.exe Catchref.$(OBJEXT) ../TestSuite/Test.$(OBJEXT)
ifneq ($(MAKECMDGOALS),Microsoft)
	Catchref.exe
endif

Catchref.$(OBJEXT): Catchref.cpp
