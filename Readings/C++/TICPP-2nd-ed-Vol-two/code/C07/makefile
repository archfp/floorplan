# From "Thinking in C++, 2nd Edition, Volume 2" 
# by Bruce Eckel & Chuck Allison
# Available at http://www.BruceEckel.com
# (c)2001 MindView Inc. Copyright notice in Copyright.txt
# Automatically-generated MAKEFILE 
# For examples in directory .\C07
# Invoke with: make compiler-name
# or: make clean

ifneq ($(MAKECMDGOALS),clean)
include ../$(MAKECMDGOALS).mac
endif

.SUFFIXES : .cpp .$(OBJEXT) .exe
.cpp.$(OBJEXT) :
	$(CPP) $(CPPFLAGS) $(OFLAGS) $<
.cpp.exe :
	$(CPP) $(CPPFLAGS) $< $(EXEFLAG)$@


Borland:  \
	Intset.exe \
	WordSet.exe \
	Stlshape.exe \
	StringVector.exe \
	FileEditor.$(OBJEXT) \
	FEditTest.exe \
	Apply.exe \
	Reversible.exe \
	Inserters.exe \
	StreamIt.exe \
	StreambufIterator.exe \
	RawStorageIterator.exe \
	BasicSequenceOperations.exe \
	VectorOverflow.exe \
	VectorInsertAndErase.exe \
	StringDeque.exe \
	DequeConversion.exe \
	DequeOverflow.exe \
	DequeCoreDump.exe \
	IndexingVsAt.exe \
	ListStability.exe \
	ListSpecialFunctions.exe \
	UniqueList.exe \
	ListVsSet.exe \
	Swapping.exe \
	ListRobustness.exe \
	SequencePerformance.exe \
	WordList.exe \
	WordList2.exe \
	StreamTokenizer.$(OBJEXT) \
	TokenizeTest.exe \
	TokenIteratorTest.exe \
	Stack1.exe \
	Stack2.exe \
	Stack3.exe \
	BankTeller.exe \
	PriorityQueue1.exe \
	PriorityQueue2.exe \
	PriorityQueue3.exe \
	PriorityQueue4.exe \
	PriorityQueue5.exe \
	PriorityQueue6.exe \
	PriorityQueue7.exe \
	PriorityQueue8.exe \
	VectorOfBool.exe \
	AssociativeBasics.exe \
	NoisyMap.exe \
	WordCount.exe \
	ProgVals.$(OBJEXT) \
	ProgValTest.exe \
	WildLifeMonitor.exe \
	MultiSet1.exe \
	MultiSetWordCount.exe \
	Thesaurus.exe \
	Stlshape2.exe \
	Ring.exe

Microsoft:  \
	Intset.exe \
	WordSet.exe \
	Stlshape.exe \
	StringVector.exe \
	FileEditor.$(OBJEXT) \
	FEditTest.exe \
	Apply.exe \
	Reversible.exe \
	Inserters.exe \
	StreambufIterator.exe \
	RawStorageIterator.exe \
	VectorOverflow.exe \
	VectorInsertAndErase.exe \
	StringDeque.exe \
	DequeOverflow.exe \
	DequeCoreDump.exe \
	IndexingVsAt.exe \
	ListStability.exe \
	ListSpecialFunctions.exe \
	UniqueList.exe \
	ListVsSet.exe \
	Swapping.exe \
	ListRobustness.exe \
	SequencePerformance.exe \
	WordList.exe \
	WordList2.exe \
	StreamTokenizer.$(OBJEXT) \
	TokenizeTest.exe \
	TokenIteratorTest.exe \
	Stack1.exe \
	Stack3.exe \
	BankTeller.exe \
	PriorityQueue1.exe \
	PriorityQueue2.exe \
	PriorityQueue3.exe \
	PriorityQueue4.exe \
	PriorityQueue5.exe \
	PriorityQueue6.exe \
	PriorityQueue7.exe \
	PriorityQueue8.exe \
	BitSet.exe \
	AssociativeBasics.exe \
	NoisyMap.exe \
	WordCount.exe \
	ProgVals.$(OBJEXT) \
	ProgValTest.exe \
	MultiSetWordCount.exe \
	Stlshape2.exe \
	Ring.exe

g++295:  \
	Intset.exe \
	WordSet.exe \
	Stlshape.exe \
	StringVector.exe \
	FileEditor.$(OBJEXT) \
	FEditTest.exe \
	Apply.exe \
	Reversible.exe \
	Inserters.exe \
	StreamIt.exe \
	BasicSequenceOperations.exe \
	VectorOverflow.exe \
	VectorCoreDump.exe \
	VectorInsertAndErase.exe \
	StringDeque.exe \
	DequeConversion.exe \
	DequeOverflow.exe \
	DequeCoreDump.exe \
	ListStability.exe \
	ListSpecialFunctions.exe \
	UniqueList.exe \
	ListVsSet.exe \
	Swapping.exe \
	ListRobustness.exe \
	SequencePerformance.exe \
	WordList.exe \
	Stack1.exe \
	Stack2.exe \
	Stack3.exe \
	BankTeller.exe \
	PriorityQueue1.exe \
	PriorityQueue2.exe \
	PriorityQueue3.exe \
	PriorityQueue4.exe \
	PriorityQueue5.exe \
	PriorityQueue6.exe \
	PriorityQueue7.exe \
	PriorityQueue8.exe \
	AssociativeBasics.exe \
	NoisyMap.exe \
	AssocInserter.exe \
	ProgVals.$(OBJEXT) \
	ProgValTest.exe \
	WildLifeMonitor.exe \
	MultiSet1.exe \
	Thesaurus.exe \
	Stlshape2.exe \
	MapVsHashMap.exe

g++3:  \
	Intset.exe \
	WordSet.exe \
	Stlshape.exe \
	StringVector.exe \
	FileEditor.$(OBJEXT) \
	FEditTest.exe \
	Reversible.exe \
	Inserters.exe \
	StreamIt.exe \
	StreambufIterator.exe \
	RawStorageIterator.exe \
	BasicSequenceOperations.exe \
	VectorOverflow.exe \
	VectorInsertAndErase.exe \
	StringDeque.exe \
	DequeConversion.exe \
	DequeOverflow.exe \
	DequeCoreDump.exe \
	IndexingVsAt.exe \
	ListStability.exe \
	ListSpecialFunctions.exe \
	UniqueList.exe \
	ListVsSet.exe \
	Swapping.exe \
	ListRobustness.exe \
	SequencePerformance.exe \
	WordList.exe \
	WordList2.exe \
	StreamTokenizer.$(OBJEXT) \
	TokenizeTest.exe \
	Stack1.exe \
	Stack2.exe \
	Stack3.exe \
	BankTeller.exe \
	PriorityQueue1.exe \
	PriorityQueue2.exe \
	PriorityQueue3.exe \
	PriorityQueue4.exe \
	PriorityQueue5.exe \
	PriorityQueue6.exe \
	PriorityQueue7.exe \
	PriorityQueue8.exe \
	VectorOfBool.exe \
	AssociativeBasics.exe \
	NoisyMap.exe \
	WordCount.exe \
	ProgVals.$(OBJEXT) \
	ProgValTest.exe \
	WildLifeMonitor.exe \
	MultiSet1.exe \
	MultiSetWordCount.exe \
	Stlshape2.exe \
	Ring.exe

edg:  \
	Intset.exe \
	WordSet.exe \
	Stlshape.exe \
	StringVector.exe \
	FileEditor.$(OBJEXT) \
	FEditTest.exe \
	Apply.exe \
	Reversible.exe \
	Inserters.exe \
	StreamIt.exe \
	StreambufIterator.exe \
	RawStorageIterator.exe \
	BasicSequenceOperations.exe \
	VectorOverflow.exe \
	VectorCoreDump.exe \
	VectorInsertAndErase.exe \
	StringDeque.exe \
	DequeConversion.exe \
	DequeOverflow.exe \
	DequeCoreDump.exe \
	IndexingVsAt.exe \
	ListStability.exe \
	ListSpecialFunctions.exe \
	UniqueList.exe \
	ListVsSet.exe \
	Swapping.exe \
	ListRobustness.exe \
	SequencePerformance.exe \
	WordList.exe \
	WordList2.exe \
	StreamTokenizer.$(OBJEXT) \
	TokenizeTest.exe \
	TokenIteratorTest.exe \
	Stack1.exe \
	Stack2.exe \
	Stack3.exe \
	BankTeller.exe \
	PriorityQueue1.exe \
	PriorityQueue2.exe \
	PriorityQueue3.exe \
	PriorityQueue4.exe \
	PriorityQueue5.exe \
	PriorityQueue6.exe \
	PriorityQueue7.exe \
	PriorityQueue8.exe \
	BitSet.exe \
	VectorOfBool.exe \
	AssociativeBasics.exe \
	NoisyMap.exe \
	AssocInserter.exe \
	WordCount.exe \
	ProgVals.$(OBJEXT) \
	ProgValTest.exe \
	WildLifeMonitor.exe \
	MultiSet1.exe \
	MultiSetWordCount.exe \
	Thesaurus.exe \
	Stlshape2.exe \
	Ring.exe \
	MapVsHashMap.exe

clean:
ifeq ($(notdir $(SHELL)),COMMAND.COM)
	del *.obj
	del *.exe
	del *.tds
	del *.o
else
	rm -f *.o *.obj *.exe *.tds
endif


Intset.exe: ../TestSuite/Test.$(OBJEXT) Intset.$(OBJEXT)
	$(CPP) $(CPPFLAGS) $(EXEFLAG)Intset.exe Intset.$(OBJEXT) ../TestSuite/Test.$(OBJEXT)
ifneq ($(MAKECMDGOALS),Microsoft)
	Intset.exe
endif

Intset.$(OBJEXT): Intset.cpp
WordSet.exe: ../TestSuite/Test.$(OBJEXT) WordSet.$(OBJEXT)
	$(CPP) $(CPPFLAGS) $(EXEFLAG)WordSet.exe WordSet.$(OBJEXT) ../TestSuite/Test.$(OBJEXT)
ifneq ($(MAKECMDGOALS),Microsoft)
	WordSet.exe
endif

WordSet.$(OBJEXT): WordSet.cpp
Stlshape.exe: ../TestSuite/Test.$(OBJEXT) Stlshape.$(OBJEXT)
	$(CPP) $(CPPFLAGS) $(EXEFLAG)Stlshape.exe Stlshape.$(OBJEXT) ../TestSuite/Test.$(OBJEXT)
ifneq ($(MAKECMDGOALS),Microsoft)
	Stlshape.exe
endif

Stlshape.$(OBJEXT): Stlshape.cpp
StringVector.exe: ../TestSuite/Test.$(OBJEXT) StringVector.$(OBJEXT)
	$(CPP) $(CPPFLAGS) $(EXEFLAG)StringVector.exe StringVector.$(OBJEXT) ../TestSuite/Test.$(OBJEXT)
ifneq ($(MAKECMDGOALS),Microsoft)
	StringVector.exe
endif

StringVector.$(OBJEXT): StringVector.cpp
FileEditor.$(OBJEXT): FileEditor.cpp

FEditTest.exe: FileEditor.$(OBJEXT) ../TestSuite/Test.$(OBJEXT) FEditTest.$(OBJEXT)
	$(CPP) $(CPPFLAGS) $(EXEFLAG)FEditTest.exe FEditTest.$(OBJEXT) FileEditor.$(OBJEXT) ../TestSuite/Test.$(OBJEXT)
ifneq ($(MAKECMDGOALS),Microsoft)
	FEditTest.exe
endif

FEditTest.$(OBJEXT): FEditTest.cpp
Apply.exe: ../TestSuite/Test.$(OBJEXT) Apply.$(OBJEXT)
	$(CPP) $(CPPFLAGS) $(EXEFLAG)Apply.exe Apply.$(OBJEXT) ../TestSuite/Test.$(OBJEXT)
ifneq ($(MAKECMDGOALS),Microsoft)
	Apply.exe
endif

Apply.$(OBJEXT): Apply.cpp
Reversible.exe: ../TestSuite/Test.$(OBJEXT) Reversible.$(OBJEXT)
	$(CPP) $(CPPFLAGS) $(EXEFLAG)Reversible.exe Reversible.$(OBJEXT) ../TestSuite/Test.$(OBJEXT)
ifneq ($(MAKECMDGOALS),Microsoft)
	Reversible.exe
endif

Reversible.$(OBJEXT): Reversible.cpp
Inserters.exe: ../TestSuite/Test.$(OBJEXT) Inserters.$(OBJEXT)
	$(CPP) $(CPPFLAGS) $(EXEFLAG)Inserters.exe Inserters.$(OBJEXT) ../TestSuite/Test.$(OBJEXT)
ifneq ($(MAKECMDGOALS),Microsoft)
	Inserters.exe
endif

Inserters.$(OBJEXT): Inserters.cpp
StreamIt.exe: ../TestSuite/Test.$(OBJEXT) StreamIt.$(OBJEXT)
	$(CPP) $(CPPFLAGS) $(EXEFLAG)StreamIt.exe StreamIt.$(OBJEXT) ../TestSuite/Test.$(OBJEXT)
ifneq ($(MAKECMDGOALS),Microsoft)
	StreamIt.exe
endif

StreamIt.$(OBJEXT): StreamIt.cpp
StreambufIterator.exe: ../TestSuite/Test.$(OBJEXT) StreambufIterator.$(OBJEXT)
	$(CPP) $(CPPFLAGS) $(EXEFLAG)StreambufIterator.exe StreambufIterator.$(OBJEXT) ../TestSuite/Test.$(OBJEXT)
ifneq ($(MAKECMDGOALS),Microsoft)
	StreambufIterator.exe
endif

StreambufIterator.$(OBJEXT): StreambufIterator.cpp
RawStorageIterator.exe: ../TestSuite/Test.$(OBJEXT) RawStorageIterator.$(OBJEXT)
	$(CPP) $(CPPFLAGS) $(EXEFLAG)RawStorageIterator.exe RawStorageIterator.$(OBJEXT) ../TestSuite/Test.$(OBJEXT)
ifneq ($(MAKECMDGOALS),Microsoft)
	RawStorageIterator.exe
endif

RawStorageIterator.$(OBJEXT): RawStorageIterator.cpp
BasicSequenceOperations.exe: ../TestSuite/Test.$(OBJEXT) BasicSequenceOperations.$(OBJEXT)
	$(CPP) $(CPPFLAGS) $(EXEFLAG)BasicSequenceOperations.exe BasicSequenceOperations.$(OBJEXT) ../TestSuite/Test.$(OBJEXT)
ifneq ($(MAKECMDGOALS),Microsoft)
	BasicSequenceOperations.exe
endif

BasicSequenceOperations.$(OBJEXT): BasicSequenceOperations.cpp
VectorOverflow.exe: ../TestSuite/Test.$(OBJEXT) VectorOverflow.$(OBJEXT)
	$(CPP) $(CPPFLAGS) $(EXEFLAG)VectorOverflow.exe VectorOverflow.$(OBJEXT) ../TestSuite/Test.$(OBJEXT)
ifneq ($(MAKECMDGOALS),Microsoft)
	VectorOverflow.exe
endif

VectorOverflow.$(OBJEXT): VectorOverflow.cpp
VectorCoreDump.exe: VectorCoreDump.cpp

VectorInsertAndErase.exe: ../TestSuite/Test.$(OBJEXT) VectorInsertAndErase.$(OBJEXT)
	$(CPP) $(CPPFLAGS) $(EXEFLAG)VectorInsertAndErase.exe VectorInsertAndErase.$(OBJEXT) ../TestSuite/Test.$(OBJEXT)
ifneq ($(MAKECMDGOALS),Microsoft)
	VectorInsertAndErase.exe
endif

VectorInsertAndErase.$(OBJEXT): VectorInsertAndErase.cpp
StringDeque.exe: ../TestSuite/Test.$(OBJEXT) StringDeque.$(OBJEXT)
	$(CPP) $(CPPFLAGS) $(EXEFLAG)StringDeque.exe StringDeque.$(OBJEXT) ../TestSuite/Test.$(OBJEXT)
ifneq ($(MAKECMDGOALS),Microsoft)
	StringDeque.exe
endif

StringDeque.$(OBJEXT): StringDeque.cpp
DequeConversion.exe: ../TestSuite/Test.$(OBJEXT) DequeConversion.$(OBJEXT)
	$(CPP) $(CPPFLAGS) $(EXEFLAG)DequeConversion.exe DequeConversion.$(OBJEXT) ../TestSuite/Test.$(OBJEXT)
ifneq ($(MAKECMDGOALS),Microsoft)
	DequeConversion.exe
endif

DequeConversion.$(OBJEXT): DequeConversion.cpp
DequeOverflow.exe: ../TestSuite/Test.$(OBJEXT) DequeOverflow.$(OBJEXT)
	$(CPP) $(CPPFLAGS) $(EXEFLAG)DequeOverflow.exe DequeOverflow.$(OBJEXT) ../TestSuite/Test.$(OBJEXT)
ifneq ($(MAKECMDGOALS),Microsoft)
	DequeOverflow.exe
endif

DequeOverflow.$(OBJEXT): DequeOverflow.cpp
DequeCoreDump.exe: DequeCoreDump.cpp

IndexingVsAt.exe: ../TestSuite/Test.$(OBJEXT) IndexingVsAt.$(OBJEXT)
	$(CPP) $(CPPFLAGS) $(EXEFLAG)IndexingVsAt.exe IndexingVsAt.$(OBJEXT) ../TestSuite/Test.$(OBJEXT)
ifneq ($(MAKECMDGOALS),Microsoft)
	IndexingVsAt.exe
endif

IndexingVsAt.$(OBJEXT): IndexingVsAt.cpp
ListStability.exe: ../TestSuite/Test.$(OBJEXT) ListStability.$(OBJEXT)
	$(CPP) $(CPPFLAGS) $(EXEFLAG)ListStability.exe ListStability.$(OBJEXT) ../TestSuite/Test.$(OBJEXT)
ifneq ($(MAKECMDGOALS),Microsoft)
	ListStability.exe
endif

ListStability.$(OBJEXT): ListStability.cpp
ListSpecialFunctions.exe: ../TestSuite/Test.$(OBJEXT) ListSpecialFunctions.$(OBJEXT)
	$(CPP) $(CPPFLAGS) $(EXEFLAG)ListSpecialFunctions.exe ListSpecialFunctions.$(OBJEXT) ../TestSuite/Test.$(OBJEXT)
ifneq ($(MAKECMDGOALS),Microsoft)
	ListSpecialFunctions.exe
endif

ListSpecialFunctions.$(OBJEXT): ListSpecialFunctions.cpp
UniqueList.exe: ../TestSuite/Test.$(OBJEXT) UniqueList.$(OBJEXT)
	$(CPP) $(CPPFLAGS) $(EXEFLAG)UniqueList.exe UniqueList.$(OBJEXT) ../TestSuite/Test.$(OBJEXT)
ifneq ($(MAKECMDGOALS),Microsoft)
	UniqueList.exe
endif

UniqueList.$(OBJEXT): UniqueList.cpp
ListVsSet.exe: ../TestSuite/Test.$(OBJEXT) ListVsSet.$(OBJEXT)
	$(CPP) $(CPPFLAGS) $(EXEFLAG)ListVsSet.exe ListVsSet.$(OBJEXT) ../TestSuite/Test.$(OBJEXT)
ifneq ($(MAKECMDGOALS),Microsoft)
	ListVsSet.exe
endif

ListVsSet.$(OBJEXT): ListVsSet.cpp
Swapping.exe: ../TestSuite/Test.$(OBJEXT) Swapping.$(OBJEXT)
	$(CPP) $(CPPFLAGS) $(EXEFLAG)Swapping.exe Swapping.$(OBJEXT) ../TestSuite/Test.$(OBJEXT)
ifneq ($(MAKECMDGOALS),Microsoft)
	Swapping.exe
endif

Swapping.$(OBJEXT): Swapping.cpp
ListRobustness.exe: ../TestSuite/Test.$(OBJEXT) ListRobustness.$(OBJEXT)
	$(CPP) $(CPPFLAGS) $(EXEFLAG)ListRobustness.exe ListRobustness.$(OBJEXT) ../TestSuite/Test.$(OBJEXT)
ifneq ($(MAKECMDGOALS),Microsoft)
	ListRobustness.exe
endif

ListRobustness.$(OBJEXT): ListRobustness.cpp
SequencePerformance.exe: ../TestSuite/Test.$(OBJEXT) SequencePerformance.$(OBJEXT)
	$(CPP) $(CPPFLAGS) $(EXEFLAG)SequencePerformance.exe SequencePerformance.$(OBJEXT) ../TestSuite/Test.$(OBJEXT)
ifneq ($(MAKECMDGOALS),Microsoft)
	SequencePerformance.exe
endif

SequencePerformance.$(OBJEXT): SequencePerformance.cpp
WordList.exe: ../TestSuite/Test.$(OBJEXT) WordList.$(OBJEXT)
	$(CPP) $(CPPFLAGS) $(EXEFLAG)WordList.exe WordList.$(OBJEXT) ../TestSuite/Test.$(OBJEXT)
ifneq ($(MAKECMDGOALS),Microsoft)
	WordList.exe
endif

WordList.$(OBJEXT): WordList.cpp
WordList2.exe: ../TestSuite/Test.$(OBJEXT) WordList2.$(OBJEXT)
	$(CPP) $(CPPFLAGS) $(EXEFLAG)WordList2.exe WordList2.$(OBJEXT) ../TestSuite/Test.$(OBJEXT)
ifneq ($(MAKECMDGOALS),Microsoft)
	WordList2.exe
endif

WordList2.$(OBJEXT): WordList2.cpp
StreamTokenizer.$(OBJEXT): StreamTokenizer.cpp

TokenizeTest.exe: StreamTokenizer.$(OBJEXT) ../TestSuite/Test.$(OBJEXT) TokenizeTest.$(OBJEXT)
	$(CPP) $(CPPFLAGS) $(EXEFLAG)TokenizeTest.exe TokenizeTest.$(OBJEXT) StreamTokenizer.$(OBJEXT) ../TestSuite/Test.$(OBJEXT)
ifneq ($(MAKECMDGOALS),Microsoft)
	TokenizeTest.exe
endif

TokenizeTest.$(OBJEXT): TokenizeTest.cpp
TokenIteratorTest.exe: ../TestSuite/Test.$(OBJEXT) TokenIteratorTest.$(OBJEXT)
	$(CPP) $(CPPFLAGS) $(EXEFLAG)TokenIteratorTest.exe TokenIteratorTest.$(OBJEXT) ../TestSuite/Test.$(OBJEXT)
ifneq ($(MAKECMDGOALS),Microsoft)
	TokenIteratorTest.exe
endif

TokenIteratorTest.$(OBJEXT): TokenIteratorTest.cpp
Stack1.exe: ../TestSuite/Test.$(OBJEXT) Stack1.$(OBJEXT)
	$(CPP) $(CPPFLAGS) $(EXEFLAG)Stack1.exe Stack1.$(OBJEXT) ../TestSuite/Test.$(OBJEXT)
ifneq ($(MAKECMDGOALS),Microsoft)
	Stack1.exe
endif

Stack1.$(OBJEXT): Stack1.cpp
Stack2.exe: ../TestSuite/Test.$(OBJEXT) Stack2.$(OBJEXT)
	$(CPP) $(CPPFLAGS) $(EXEFLAG)Stack2.exe Stack2.$(OBJEXT) ../TestSuite/Test.$(OBJEXT)
ifneq ($(MAKECMDGOALS),Microsoft)
	Stack2.exe
endif

Stack2.$(OBJEXT): Stack2.cpp
Stack3.exe: ../TestSuite/Test.$(OBJEXT) Stack3.$(OBJEXT)
	$(CPP) $(CPPFLAGS) $(EXEFLAG)Stack3.exe Stack3.$(OBJEXT) ../TestSuite/Test.$(OBJEXT)
ifneq ($(MAKECMDGOALS),Microsoft)
	Stack3.exe
endif

Stack3.$(OBJEXT): Stack3.cpp
BankTeller.exe: ../TestSuite/Test.$(OBJEXT) BankTeller.$(OBJEXT)
	$(CPP) $(CPPFLAGS) $(EXEFLAG)BankTeller.exe BankTeller.$(OBJEXT) ../TestSuite/Test.$(OBJEXT)
ifneq ($(MAKECMDGOALS),Microsoft)
	BankTeller.exe
endif

BankTeller.$(OBJEXT): BankTeller.cpp
PriorityQueue1.exe: ../TestSuite/Test.$(OBJEXT) PriorityQueue1.$(OBJEXT)
	$(CPP) $(CPPFLAGS) $(EXEFLAG)PriorityQueue1.exe PriorityQueue1.$(OBJEXT) ../TestSuite/Test.$(OBJEXT)
ifneq ($(MAKECMDGOALS),Microsoft)
	PriorityQueue1.exe
endif

PriorityQueue1.$(OBJEXT): PriorityQueue1.cpp
PriorityQueue2.exe: ../TestSuite/Test.$(OBJEXT) PriorityQueue2.$(OBJEXT)
	$(CPP) $(CPPFLAGS) $(EXEFLAG)PriorityQueue2.exe PriorityQueue2.$(OBJEXT) ../TestSuite/Test.$(OBJEXT)
ifneq ($(MAKECMDGOALS),Microsoft)
	PriorityQueue2.exe
endif

PriorityQueue2.$(OBJEXT): PriorityQueue2.cpp
PriorityQueue3.exe: ../TestSuite/Test.$(OBJEXT) PriorityQueue3.$(OBJEXT)
	$(CPP) $(CPPFLAGS) $(EXEFLAG)PriorityQueue3.exe PriorityQueue3.$(OBJEXT) ../TestSuite/Test.$(OBJEXT)
ifneq ($(MAKECMDGOALS),Microsoft)
	PriorityQueue3.exe
endif

PriorityQueue3.$(OBJEXT): PriorityQueue3.cpp
PriorityQueue4.exe: ../TestSuite/Test.$(OBJEXT) PriorityQueue4.$(OBJEXT)
	$(CPP) $(CPPFLAGS) $(EXEFLAG)PriorityQueue4.exe PriorityQueue4.$(OBJEXT) ../TestSuite/Test.$(OBJEXT)
ifneq ($(MAKECMDGOALS),Microsoft)
	PriorityQueue4.exe
endif

PriorityQueue4.$(OBJEXT): PriorityQueue4.cpp
PriorityQueue5.exe: ../TestSuite/Test.$(OBJEXT) PriorityQueue5.$(OBJEXT)
	$(CPP) $(CPPFLAGS) $(EXEFLAG)PriorityQueue5.exe PriorityQueue5.$(OBJEXT) ../TestSuite/Test.$(OBJEXT)
ifneq ($(MAKECMDGOALS),Microsoft)
	PriorityQueue5.exe
endif

PriorityQueue5.$(OBJEXT): PriorityQueue5.cpp
PriorityQueue6.exe: ../TestSuite/Test.$(OBJEXT) PriorityQueue6.$(OBJEXT)
	$(CPP) $(CPPFLAGS) $(EXEFLAG)PriorityQueue6.exe PriorityQueue6.$(OBJEXT) ../TestSuite/Test.$(OBJEXT)
ifneq ($(MAKECMDGOALS),Microsoft)
	PriorityQueue6.exe
endif

PriorityQueue6.$(OBJEXT): PriorityQueue6.cpp
PriorityQueue7.exe: ../TestSuite/Test.$(OBJEXT) PriorityQueue7.$(OBJEXT)
	$(CPP) $(CPPFLAGS) $(EXEFLAG)PriorityQueue7.exe PriorityQueue7.$(OBJEXT) ../TestSuite/Test.$(OBJEXT)
ifneq ($(MAKECMDGOALS),Microsoft)
	PriorityQueue7.exe
endif

PriorityQueue7.$(OBJEXT): PriorityQueue7.cpp
PriorityQueue8.exe: ../TestSuite/Test.$(OBJEXT) PriorityQueue8.$(OBJEXT)
	$(CPP) $(CPPFLAGS) $(EXEFLAG)PriorityQueue8.exe PriorityQueue8.$(OBJEXT) ../TestSuite/Test.$(OBJEXT)
ifneq ($(MAKECMDGOALS),Microsoft)
	PriorityQueue8.exe
endif

PriorityQueue8.$(OBJEXT): PriorityQueue8.cpp
BitSet.exe: ../TestSuite/Test.$(OBJEXT) BitSet.$(OBJEXT)
	$(CPP) $(CPPFLAGS) $(EXEFLAG)BitSet.exe BitSet.$(OBJEXT) ../TestSuite/Test.$(OBJEXT)
ifneq ($(MAKECMDGOALS),Microsoft)
	BitSet.exe
endif

BitSet.$(OBJEXT): BitSet.cpp
VectorOfBool.exe: ../TestSuite/Test.$(OBJEXT) VectorOfBool.$(OBJEXT)
	$(CPP) $(CPPFLAGS) $(EXEFLAG)VectorOfBool.exe VectorOfBool.$(OBJEXT) ../TestSuite/Test.$(OBJEXT)
ifneq ($(MAKECMDGOALS),Microsoft)
	VectorOfBool.exe
endif

VectorOfBool.$(OBJEXT): VectorOfBool.cpp
AssociativeBasics.exe: ../TestSuite/Test.$(OBJEXT) AssociativeBasics.$(OBJEXT)
	$(CPP) $(CPPFLAGS) $(EXEFLAG)AssociativeBasics.exe AssociativeBasics.$(OBJEXT) ../TestSuite/Test.$(OBJEXT)
ifneq ($(MAKECMDGOALS),Microsoft)
	AssociativeBasics.exe
endif

AssociativeBasics.$(OBJEXT): AssociativeBasics.cpp
NoisyMap.exe: ../TestSuite/Test.$(OBJEXT) NoisyMap.$(OBJEXT)
	$(CPP) $(CPPFLAGS) $(EXEFLAG)NoisyMap.exe NoisyMap.$(OBJEXT) ../TestSuite/Test.$(OBJEXT)
ifneq ($(MAKECMDGOALS),Microsoft)
	NoisyMap.exe
endif

NoisyMap.$(OBJEXT): NoisyMap.cpp
AssocInserter.exe: ../TestSuite/Test.$(OBJEXT) AssocInserter.$(OBJEXT)
	$(CPP) $(CPPFLAGS) $(EXEFLAG)AssocInserter.exe AssocInserter.$(OBJEXT) ../TestSuite/Test.$(OBJEXT)
ifneq ($(MAKECMDGOALS),Microsoft)
	AssocInserter.exe
endif

AssocInserter.$(OBJEXT): AssocInserter.cpp
WordCount.exe: StreamTokenizer.$(OBJEXT) ../TestSuite/Test.$(OBJEXT) WordCount.$(OBJEXT)
	$(CPP) $(CPPFLAGS) $(EXEFLAG)WordCount.exe WordCount.$(OBJEXT) StreamTokenizer.$(OBJEXT) ../TestSuite/Test.$(OBJEXT)
ifneq ($(MAKECMDGOALS),Microsoft)
	WordCount.exe
endif

WordCount.$(OBJEXT): WordCount.cpp
ProgVals.$(OBJEXT): ProgVals.cpp

ProgValTest.exe: ProgVals.$(OBJEXT) ProgValTest.$(OBJEXT)
	$(CPP) $(CPPFLAGS) $(EXEFLAG)ProgValTest.exe ProgValTest.$(OBJEXT) ProgVals.$(OBJEXT)

ProgValTest.$(OBJEXT): ProgValTest.cpp
WildLifeMonitor.exe: ../TestSuite/Test.$(OBJEXT) WildLifeMonitor.$(OBJEXT)
	$(CPP) $(CPPFLAGS) $(EXEFLAG)WildLifeMonitor.exe WildLifeMonitor.$(OBJEXT) ../TestSuite/Test.$(OBJEXT)
ifneq ($(MAKECMDGOALS),Microsoft)
	WildLifeMonitor.exe
endif

WildLifeMonitor.$(OBJEXT): WildLifeMonitor.cpp
MultiSet1.exe: ../TestSuite/Test.$(OBJEXT) MultiSet1.$(OBJEXT)
	$(CPP) $(CPPFLAGS) $(EXEFLAG)MultiSet1.exe MultiSet1.$(OBJEXT) ../TestSuite/Test.$(OBJEXT)
ifneq ($(MAKECMDGOALS),Microsoft)
	MultiSet1.exe
endif

MultiSet1.$(OBJEXT): MultiSet1.cpp
MultiSetWordCount.exe: StreamTokenizer.$(OBJEXT) ../TestSuite/Test.$(OBJEXT) MultiSetWordCount.$(OBJEXT)
	$(CPP) $(CPPFLAGS) $(EXEFLAG)MultiSetWordCount.exe MultiSetWordCount.$(OBJEXT) StreamTokenizer.$(OBJEXT) ../TestSuite/Test.$(OBJEXT)
ifneq ($(MAKECMDGOALS),Microsoft)
	MultiSetWordCount.exe
endif

MultiSetWordCount.$(OBJEXT): MultiSetWordCount.cpp
Thesaurus.exe: ../TestSuite/Test.$(OBJEXT) Thesaurus.$(OBJEXT)
	$(CPP) $(CPPFLAGS) $(EXEFLAG)Thesaurus.exe Thesaurus.$(OBJEXT) ../TestSuite/Test.$(OBJEXT)
ifneq ($(MAKECMDGOALS),Microsoft)
	Thesaurus.exe
endif

Thesaurus.$(OBJEXT): Thesaurus.cpp
Stlshape2.exe: ../TestSuite/Test.$(OBJEXT) Stlshape2.$(OBJEXT)
	$(CPP) $(CPPFLAGS) $(EXEFLAG)Stlshape2.exe Stlshape2.$(OBJEXT) ../TestSuite/Test.$(OBJEXT)
ifneq ($(MAKECMDGOALS),Microsoft)
	Stlshape2.exe
endif

Stlshape2.$(OBJEXT): Stlshape2.cpp
Ring.exe: ../TestSuite/Test.$(OBJEXT) Ring.$(OBJEXT)
	$(CPP) $(CPPFLAGS) $(EXEFLAG)Ring.exe Ring.$(OBJEXT) ../TestSuite/Test.$(OBJEXT)
ifneq ($(MAKECMDGOALS),Microsoft)
	Ring.exe
endif

Ring.$(OBJEXT): Ring.cpp
MapVsHashMap.exe: ../TestSuite/Test.$(OBJEXT) MapVsHashMap.$(OBJEXT)
	$(CPP) $(CPPFLAGS) $(EXEFLAG)MapVsHashMap.exe MapVsHashMap.$(OBJEXT) ../TestSuite/Test.$(OBJEXT)
ifneq ($(MAKECMDGOALS),Microsoft)
	MapVsHashMap.exe
endif

MapVsHashMap.$(OBJEXT): MapVsHashMap.cpp
