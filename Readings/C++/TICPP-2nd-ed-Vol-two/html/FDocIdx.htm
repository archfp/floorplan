<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML>
<!--
This document was converted from RTF source: 
By rtftohtml 4.19
See http://www.sunpack.com/RTF
Filename:C:\TEMP\TicV2\html\TicV2.rtf
Application Directory:C:\TOOLS\RTF2HTML\
Subject:
Author:Bruce Eckel
Operator:Bruce Eckel
Document Comments:
Version Comments:
Comments:
Keywords:
Translation Date:08/19/2001
Translation Time:14:24:49
Translation Platform:Win32
Number of Output files:19
This File:C:\TEMP\TicV2\html\FDocIdx.htm
SplitDepth=1
SkipNavPanel=1
SkipLeadingToc=1
SkipTrailingToc=1
GenContents=1
GenFrames=1
GenIndex=1
-->
<HEAD lang="en"><META http-equiv="Content-Type" content="text/html">
<TITLE>Thinking in C++, 2nd ed. Volume 2 Revision 4.0 - Index</TITLE><BASE  TARGET="RightFrame">

</HEAD>

<BODY  BGCOLOR="#FFFFFF"><H1>Thinking in C++, 2nd ed. Volume 2 Revision 4.0 - Index</H1></FONT><H2><HR><A HREF="#IA-1" TARGET="_self">1</A>
 , <A HREF="#IA-2" TARGET="_self">2</A>
 , <A HREF="#IA-3" TARGET="_self">3</A>
 , <A HREF="#IA-A" TARGET="_self">A</A>
 , <A HREF="#IA-B" TARGET="_self">B</A>
 , <A HREF="#IA-C" TARGET="_self">C</A>
 , <A HREF="#IA-D" TARGET="_self">D</A>
 , <A HREF="#IA-E" TARGET="_self">E</A>
 , <A HREF="#IA-F" TARGET="_self">F</A>
 , <A HREF="#IA-G" TARGET="_self">G</A>
 , <A HREF="#IA-H" TARGET="_self">H</A>
 , <A HREF="#IA-I" TARGET="_self">I</A>
 , <A HREF="#IA-K" TARGET="_self">K</A>
 , <A HREF="#IA-L" TARGET="_self">L</A>
 , <A HREF="#IA-M" TARGET="_self">M</A>
 , <A HREF="#IA-N" TARGET="_self">N</A>
 , <A HREF="#IA-O" TARGET="_self">O</A>
 , <A HREF="#IA-P" TARGET="_self">P</A>
 , <A HREF="#IA-R" TARGET="_self">R</A>
 , <A HREF="#IA-S" TARGET="_self">S</A>
 , <A HREF="#IA-T" TARGET="_self">T</A>
 , <A HREF="#IA-U" TARGET="_self">U</A>
 , <A HREF="#IA-V" TARGET="_self">V</A>
 , <A HREF="#IA-W" TARGET="_self">W</A>
 , <A HREF="#IA-Z" TARGET="_self">Z</A>
</H2></FONT>
<HR>
<DIV ALIGN="CENTER"><FONT SIZE="+2"><B><A NAME="IA-1">1</A></B></FONT></P></DIV>
1.creational design patterns, <A HREF="Chap11.htm#Index657">1</A><BR>
<DIV ALIGN="CENTER"><FONT SIZE="+2"><B><A NAME="IA-2">2</A></B></FONT></P></DIV>
<DL><DT>2.design patterns<DD> structural, <A HREF="Chap11.htm#Index659">1</A></DL><DIV ALIGN="CENTER"><FONT SIZE="+2"><B><A NAME="IA-3">3</A></B></FONT></P></DIV>
<DL><DT>3.design patterns<DD> behavioral, <A HREF="Chap11.htm#Index661">1</A></DL><DIV ALIGN="CENTER"><FONT SIZE="+2"><B><A NAME="IA-A">A</A></B></FONT></P></DIV>
<DL><DT>abort(&#160;)<DD> Standard C library function, <A HREF="Chap01.htm#Index53">1</A></DL><DL><DT>abstraction<DD> in program design, <A HREF="Chap11.htm#Index644">1</A></DL>adapting to usage in different countries, Standard C++ localization library, <A HREF="Part2.htm#Index157">1</A><BR>
<DL><DT>ambiguity<DD> in multiple inheritance, <A HREF="Chap10.htm#Index609">1</A></DL>ANSI/ISO C++ committee, <A HREF="Preface.htm#Index5">1</A><BR>
applicator, <A HREF="Chap05.htm#Index416">1</A><BR>
applying a function to a container, <A HREF="Chap06.htm#Index472">1</A><BR>
<DL><DT>arguments<DD> variable argument list, <A HREF="Chap05.htm#Index184">1</A></DL>assert(&#160;), <A HREF="Chap01.htm#Index123">1</A><BR>
atof(&#160;), <A HREF="Chap05.htm#Index306">1</A><BR>
atoi(&#160;), <A HREF="Chap05.htm#Index307">1</A><BR>
<DL><DT>automatic type conversion<DD> and exception handling, <A HREF="Chap01.htm#Index85">1</A></DL>awk, <A HREF="Chap05.htm#Index430">1</A><BR>
<DIV ALIGN="CENTER"><FONT SIZE="+2"><B><A NAME="IA-B">B</A></B></FONT></P></DIV>
bad(&#160;), <A HREF="Chap05.htm#Index246">1</A><BR>
badbit, <A HREF="Chap05.htm#Index252">1</A><BR>
<DL><DT>bad_alloc, <A HREF="Part2.htm#Index143">1</A><DD> Standard C++ library exception type, <A HREF="Chap01.htm#Index116">1</A></DL><DL><DT>bad_cast<DD> and run-time type identification, <A HREF="Chap09.htm#Index561">1</A><BR>
 Standard C++ library exception type, <A HREF="Chap01.htm#Index106">1</A></DL><DL><DT>bad_typeid<DD> run-time type identification, <A HREF="Chap09.htm#Index565">1</A><BR>
 Standard C++ library exception type, <A HREF="Chap01.htm#Index107">1</A></DL><DL><DT>before(&#160;)<DD> run-time type identification, <A HREF="Chap09.htm#Index524">1</A></DL>behavioral design patterns, <A HREF="Chap11.htm#Index662">1</A><BR>
<DL><DT>binary<DD> printing, <A HREF="Chap05.htm#Index423">1</A></DL><DL><DT>bits<DD> bit vector in the Standard C++ libraries, <A HREF="Part2.htm#Index160">1</A></DL><DL><DT>bit_string<DD> bit vector in the Standard C++ libraries, <A HREF="Part2.htm#Index162">1</A></DL>bloat, preventing template bloat, <A HREF="Chap06.htm#Index488">1</A><BR>
Booch, Grady, <A HREF="Chap11.htm#Index685">1</A><BR>
book errors, reporting, <A HREF="Preface.htm#Index10">1</A><BR>
bubble sort, <A HREF="Chap06.htm#Index484">1</A><BR>
buffering, iostream, <A HREF="Chap05.htm#Index271">1</A><BR>
bytes, reading raw, <A HREF="Chap05.htm#Index235">1</A><BR>
<DIV ALIGN="CENTER"><FONT SIZE="+2"><B><A NAME="IA-C">C</A></B></FONT></P></DIV>
<DL><DT>C<DD> basic data types, <A HREF="Chap05.htm#Index182">1</A><BR>
 error handling in C, <A HREF="Chap01.htm#Index17">1</A><BR>
 localtime(&#160;), Standard library, <A HREF="Chap05.htm#Index450">1</A><BR>
 rand(&#160;), Standard library, <A HREF="Chap05.htm#Index452">1</A><BR>
 Standard C, <A HREF="Preface.htm#Index4">1</A><BR>
 Standard C library function abort(&#160;), <A HREF="Chap01.htm#Index52">1</A><BR>
 Standard C library function strncpy(&#160;), <A HREF="Chap01.htm#Index64">1</A><BR>
 Standard C library function strtok(&#160;), <A HREF="Chap07.htm#Index499">1</A><BR>
 standard I/O library, <A HREF="Chap05.htm#Index352">1</A><BR>
 Standard library macro toupper(&#160;), <A HREF="Chap05.htm#Index432">1</A></DL><DL><DT>C++<DD> ANSI/ISO C++ committee, <A HREF="Preface.htm#Index6">1</A><BR>
 sacred design goals of C++, <A HREF="Chap05.htm#Index187">1</A><BR>
 Standard C++, <A HREF="Preface.htm#Index9">1</A><BR>
 Standard string class, <A HREF="Chap05.htm#Index204">1</A><BR>
 template, <A HREF="Chap11.htm#Index703">1</A></DL>calloc(&#160;), <A HREF="Chap06.htm#Index470">1</A><BR>
<DL><DT>cast<DD> casting away const and/or volatile, <A HREF="Chap09.htm#Index593">1</A><BR>
 dynamic_cast, <A HREF="Chap09.htm#Index588">1</A><BR>
 new cast syntax, <A HREF="Chap09.htm#Index586">1</A><BR>
 run-time type identification, casting to intermediate levels, <A HREF="Chap09.htm#Index538">1</A><BR>
 searching for, <A HREF="Chap09.htm#Index592">1</A></DL><DL><DT>catch, <A HREF="Chap01.htm#Index32">1</A><DD> catching any exception, <A HREF="Chap01.htm#Index43">1</A></DL>chaining, in iostreams, <A HREF="Chap05.htm#Index207">1</A><BR>
<DL><DT>change<DD> vector of change, <A HREF="Chap11.htm#Index647">1</A>, <A HREF="Chap11.htm#Index691">2</A></DL>char* iostreams, <A HREF="Chap05.htm#Index200">1</A><BR>
<DL><DT>character<DD> transforming strings to typed values, <A HREF="Chap05.htm#Index303">1</A></DL><DL><DT>class<DD> class hierarchies and exception handling, <A HREF="Chap01.htm#Index90">1</A><BR>
 maintaining library source, <A HREF="Chap05.htm#Index435">1</A><BR>
 most-derived class, <A HREF="Chap10.htm#Index615">1</A><BR>
 nested class, and run-time type identification, <A HREF="Chap09.htm#Index533">1</A><BR>
 Standard C++ string, <A HREF="Chap05.htm#Index206">1</A><BR>
 virtual base classes, <A HREF="Chap10.htm#Index613">1</A><BR>
 wrapping, <A HREF="Chap05.htm#Index171">1</A></DL>cleaning up the stack during exception handling, <A HREF="Chap01.htm#Index61">1</A><BR>
clear(&#160;), <A HREF="Chap05.htm#Index254">1</A>, <A HREF="Chap05.htm#Index465">2</A><BR>
<DL><DT>command line<DD> interface, <A HREF="Chap05.htm#Index221">1</A></DL>committee, ANSI/ISO C++, <A HREF="Preface.htm#Index7">1</A><BR>
<DL><DT>compile time<DD> error checking, <A HREF="Chap05.htm#Index178">1</A></DL>compiler error tests, <A HREF="Chap05.htm#Index441">1</A><BR>
complex number class, <A HREF="Part2.htm#Index168">1</A><BR>
<DL><DT>composition<DD> and design patterns, <A HREF="Chap11.htm#Index650">1</A></DL>console I/O, <A HREF="Chap05.htm#Index226">1</A><BR>
<DL><DT>const<DD> casting away const and/or volatile, <A HREF="Chap09.htm#Index594">1</A></DL><DL><DT>constructor<DD> and exception handling, <A HREF="Chap01.htm#Index62">1</A>, <A HREF="Chap01.htm#Index73">2</A>, <A HREF="Chap01.htm#Index132">3</A><BR>
 default constructor, <A HREF="Chap11.htm#Index672">1</A><BR>
 default constructor synthesized by the compiler, <A HREF="Chap11.htm#Index656">1</A><BR>
 failing, <A HREF="Chap01.htm#Index134">1</A><BR>
 order of constructor and destructor calls, <A HREF="Chap09.htm#Index550">1</A><BR>
 private constructor, <A HREF="Chap11.htm#Index653">1</A><BR>
 simulating virtual constructors, <A HREF="Chap11.htm#Index665">1</A><BR>
 virtual base classes with a default constructor, <A HREF="Chap10.htm#Index618">1</A><BR>
 virtual functions inside constructors, <A HREF="Chap11.htm#Index667">1</A></DL>const_cast, <A HREF="Chap09.htm#Index589">1</A><BR>
<DL><DT>controlling<DD> template instantiation, <A HREF="Chap06.htm#Index489">1</A></DL><DL><DT>conversion<DD> automatic type conversions and exception handling, <A HREF="Chap01.htm#Index87">1</A></DL>Coplien, James, <A HREF="Chap11.htm#Index670">1</A><BR>
couplet, <A HREF="Chap11.htm#Index707">1</A><BR>
<DL><DT>creating<DD> manipulators, <A HREF="Chap05.htm#Index412">1</A></DL>creational design patterns, <A HREF="Chap11.htm#Index686">1</A><BR>
<DIV ALIGN="CENTER"><FONT SIZE="+2"><B><A NAME="IA-D">D</A></B></FONT></P></DIV>
<DL><DT>data<DD> C data types, <A HREF="Chap05.htm#Index181">1</A></DL><DL><DT>database<DD> object-oriented database, <A HREF="Chap10.htm#Index626">1</A></DL>datalogger, <A HREF="Chap05.htm#Index442">1</A><BR>
<DL><DT>decimal<DD> dec in iostreams, <A HREF="Chap05.htm#Index214">1</A><BR>
 dec manipulator in iostreams, <A HREF="Chap05.htm#Index380">1</A><BR>
 formatting, <A HREF="Chap05.htm#Index356">1</A></DL><DL><DT>default<DD> constructor, <A HREF="Chap11.htm#Index671">1</A></DL><DL><DT>default constructor<DD> synthesized by the compiler, <A HREF="Chap11.htm#Index655">1</A></DL><DL><DT>delete, <A HREF="Chap05.htm#Index326">1</A><DD> overloading array new and delete, <A HREF="Chap01.htm#Index67">1</A></DL>deserialization, and persistence, <A HREF="Chap10.htm#Index628">1</A><BR>
<DL><DT>design<DD> abstraction in program design, <A HREF="Chap11.htm#Index645">1</A><BR>
 and efficiency, <A HREF="Chap06.htm#Index482">1</A><BR>
 sacred design goals of C++, <A HREF="Chap05.htm#Index186">1</A></DL><DL><DT>design patterns, <A HREF="Chap11.htm#Index642">1</A><DD> creational, <A HREF="Chap11.htm#Index658">1</A>, <A HREF="Chap11.htm#Index687">2</A><BR>
 factory method, <A HREF="Chap11.htm#Index689">1</A><BR>
 observer, <A HREF="Chap11.htm#Index673">1</A><BR>
 prototype, <A HREF="Chap11.htm#Index694">1</A>, <A HREF="Chap11.htm#Index700">2</A><BR>
 vector of change, <A HREF="Chap11.htm#Index648">1</A>, <A HREF="Chap11.htm#Index692">2</A><BR>
 visitor, <A HREF="Chap11.htm#Index684">1</A></DL><DL><DT>destructor<DD> and exception handling, <A HREF="Chap01.htm#Index59">1</A>, <A HREF="Chap01.htm#Index135">2</A><BR>
 order of constructor and destructor calls, <A HREF="Chap09.htm#Index551">1</A></DL><DL><DT>diamond<DD> in multiple inheritance, <A HREF="Chap10.htm#Index606">1</A></DL><DL><DT>dispatching<DD> double dispatching, <A HREF="Chap11.htm#Index682">1</A>, <A HREF="Chap11.htm#Index706">2</A><BR>
 multiple dispatching, <A HREF="Chap11.htm#Index680">1</A></DL><DL><DT>domain_error<DD> Standard C++ library exception type, <A HREF="Chap01.htm#Index102">1</A></DL>double dispatching, <A HREF="Chap11.htm#Index681">1</A>, <A HREF="Chap11.htm#Index705">2</A><BR>
<DL><DT>downcast<DD> type-safe downcast in run-time type identification, <A HREF="Chap09.htm#Index525">1</A></DL><DL><DT>dynamic_cast<DD> and exceptions, run-time type identification, <A HREF="Chap09.htm#Index556">1</A><BR>
 difference between dynamic_cast and typeid(&#160;), run-time type identification, <A HREF="Chap09.htm#Index543">1</A><BR>
 run-time type identification, <A HREF="Chap09.htm#Index529">1</A></DL><DIV ALIGN="CENTER"><FONT SIZE="+2"><B><A NAME="IA-E">E</A></B></FONT></P></DIV>
effectors, <A HREF="Chap05.htm#Index421">1</A><BR>
<DL><DT>efficiency<DD> design, <A HREF="Chap06.htm#Index483">1</A><BR>
 run-time type identification, <A HREF="Chap09.htm#Index574">1</A></DL>ellipses, with exception handling, <A HREF="Chap01.htm#Index45">1</A><BR>
endl, iostreams, <A HREF="Chap05.htm#Index209">1</A>, <A HREF="Chap05.htm#Index388">2</A><BR>
ends, iostreams, <A HREF="Chap05.htm#Index218">1</A>, <A HREF="Chap05.htm#Index317">2</A><BR>
enumeration, <A HREF="Chap05.htm#Index438">1</A><BR>
eof(&#160;), <A HREF="Chap05.htm#Index242">1</A><BR>
eofbit, <A HREF="Chap05.htm#Index248">1</A><BR>
errno, <A HREF="Chap01.htm#Index18">1</A><BR>
<DL><DT>error<DD> compile-time checking, <A HREF="Chap05.htm#Index179">1</A><BR>
 error handling in C, <A HREF="Chap01.htm#Index16">1</A><BR>
 handling, iostream, <A HREF="Chap05.htm#Index239">1</A><BR>
 recovery, <A HREF="Chap01.htm#Index13">1</A><BR>
 reporting errors in book, <A HREF="Preface.htm#Index11">1</A></DL><DL><DT>exception handling, <A HREF="Chap01.htm#Index15">1</A><DD> asynchronous events, <A HREF="Chap01.htm#Index121">1</A><BR>
 atomic allocations for safety, <A HREF="Chap01.htm#Index77">1</A><BR>
 automatic type conversions, <A HREF="Chap01.htm#Index88">1</A><BR>
 bad_alloc Standard C++ library exception type, <A HREF="Chap01.htm#Index119">1</A><BR>
 bad_cast Standard C++ library exception type, <A HREF="Chap01.htm#Index112">1</A><BR>
 bad_typeid, <A HREF="Chap09.htm#Index564">1</A><BR>
 bad_typeid Standard C++ library exception type, <A HREF="Chap01.htm#Index113">1</A><BR>
 catching any exception, <A HREF="Chap01.htm#Index44">1</A><BR>
 class hierarchies, <A HREF="Chap01.htm#Index89">1</A><BR>
 cleaning up the stack during a throw, <A HREF="Chap01.htm#Index60">1</A><BR>
 constructors, <A HREF="Chap01.htm#Index63">1</A>, <A HREF="Chap01.htm#Index74">2</A><BR>
 constructors , <A HREF="Chap01.htm#Index133">1</A><BR>
 destructors, <A HREF="Chap01.htm#Index58">1</A>, <A HREF="Chap01.htm#Index136">2</A><BR>
 domain_error Standard C++ library exception type, <A HREF="Chap01.htm#Index108">1</A><BR>
 dynamic_cast, run-time type identification, <A HREF="Chap09.htm#Index557">1</A><BR>
 ellipses, <A HREF="Chap01.htm#Index46">1</A><BR>
 exception handler, <A HREF="Chap01.htm#Index29">1</A><BR>
 exception hierarchies, <A HREF="Chap01.htm#Index125">1</A><BR>
 exception matching, <A HREF="Chap01.htm#Index81">1</A><BR>
 exception Standard C++ library exception type, <A HREF="Chap01.htm#Index99">1</A><BR>
 invalid_argument Standard C++ library exception type, <A HREF="Chap01.htm#Index109">1</A><BR>
 length_error Standard C++ library exception type, <A HREF="Chap01.htm#Index110">1</A><BR>
 logic_error Standard C++ library exception type, <A HREF="Chap01.htm#Index100">1</A><BR>
 multiple inheritance, <A HREF="Chap01.htm#Index127">1</A><BR>
 naked pointers, <A HREF="Chap01.htm#Index76">1</A><BR>
 object slicing and exception handling, <A HREF="Chap01.htm#Index84">1</A>, <A HREF="Chap01.htm#Index93">2</A><BR>
 operator new placement syntax, <A HREF="Chap01.htm#Index70">1</A><BR>
 out_of_range Standard C++ library exception type, <A HREF="Chap01.htm#Index111">1</A><BR>
 overflow_error Standard C++ library exception type, <A HREF="Chap01.htm#Index118">1</A><BR>
 overhead, <A HREF="Chap01.htm#Index138">1</A><BR>
 programming guidelines, <A HREF="Chap01.htm#Index120">1</A><BR>
 range_error Standard C++ library exception type, <A HREF="Chap01.htm#Index117">1</A><BR>
 re-throwing an exception, <A HREF="Chap01.htm#Index48">1</A><BR>
 references, <A HREF="Chap01.htm#Index79">1</A>, <A HREF="Chap01.htm#Index130">2</A><BR>
 run-time type identification, <A HREF="Chap09.htm#Index514">1</A><BR>
 runtime_error Standard C++ library exception type, <A HREF="Chap01.htm#Index101">1</A><BR>
 set_terminate(&#160;), <A HREF="Chap01.htm#Index54">1</A><BR>
 set_unexpected( ), <A HREF="Chap01.htm#Index41">1</A><BR>
 specification, <A HREF="Chap01.htm#Index36">1</A><BR>
 Standard C++ library exception type, <A HREF="Chap01.htm#Index96">1</A><BR>
 Standard C++ library exceptions, <A HREF="Chap01.htm#Index94">1</A><BR>
 standard exception classes, <A HREF="Part2.htm#Index150">1</A><BR>
 termination vs. resumption, <A HREF="Chap01.htm#Index33">1</A><BR>
 throwing &amp; catching pointers, <A HREF="Chap01.htm#Index131">1</A><BR>
 throwing an exception, <A HREF="Chap01.htm#Index27">1</A><BR>
 typeid(&#160;), <A HREF="Chap09.htm#Index563">1</A><BR>
 typical uses of exceptions, <A HREF="Chap01.htm#Index124">1</A><BR>
 uncaught exceptions, <A HREF="Chap01.htm#Index51">1</A><BR>
 unexpected( ), <A HREF="Chap01.htm#Index39">1</A><BR>
 unexpected, filtering exceptions, <A HREF="Chap01.htm#Index72">1</A></DL>extensible, <A HREF="Chap11.htm#Index709">1</A><BR>
extensible program, <A HREF="Chap05.htm#Index180">1</A><BR>
extractor, <A HREF="Chap05.htm#Index191">1</A><BR>
<DIV ALIGN="CENTER"><FONT SIZE="+2"><B><A NAME="IA-F">F</A></B></FONT></P></DIV>
factory method, <A HREF="Chap11.htm#Index688">1</A><BR>
fail(&#160;), <A HREF="Chap05.htm#Index244">1</A><BR>
failbit, <A HREF="Chap05.htm#Index250">1</A>, <A HREF="Chap05.htm#Index461">2</A><BR>
<DL><DT>file<DD> iostreams, <A HREF="Chap05.htm#Index197">1</A>, <A HREF="Chap05.htm#Index229">2</A></DL>FILE, stdio, <A HREF="Chap05.htm#Index173">1</A><BR>
<DL><DT>fill<DD> width, precision, iostream, <A HREF="Chap05.htm#Index369">1</A></DL>filtering unexpected exceptions, <A HREF="Chap01.htm#Index71">1</A><BR>
flags, iostreams format, <A HREF="Chap05.htm#Index338">1</A><BR>
flush, iostreams, <A HREF="Chap05.htm#Index211">1</A>, <A HREF="Chap05.htm#Index390">2</A><BR>
format flags, iostreams, <A HREF="Chap05.htm#Index336">1</A><BR>
<DL><DT>formatting<DD> formatting manipulators, iostreams, <A HREF="Chap05.htm#Index377">1</A><BR>
 in-core, <A HREF="Chap05.htm#Index298">1</A><BR>
 iostream internal data, <A HREF="Chap05.htm#Index335">1</A><BR>
 output stream, <A HREF="Chap05.htm#Index332">1</A></DL>free(&#160;), <A HREF="Chap05.htm#Index328">1</A><BR>
freeze(&#160;), <A HREF="Chap05.htm#Index329">1</A><BR>
freezing a strstream, <A HREF="Chap05.htm#Index322">1</A><BR>
fseek(&#160;), <A HREF="Chap05.htm#Index281">1</A><BR>
FSTREAM.H, <A HREF="Chap05.htm#Index258">1</A><BR>
<DL><DT>function<DD> applying a function to a container, <A HREF="Chap06.htm#Index473">1</A><BR>
 function objects, <A HREF="Part2.htm#Index154">1</A><BR>
 function templates, <A HREF="Chap06.htm#Index466">1</A><BR>
 member function template, <A HREF="Chap06.htm#Index477">1</A><BR>
 pointer to a function, <A HREF="Chap01.htm#Index57">1</A><BR>
 run-time type identification without virtual functions, <A HREF="Chap09.htm#Index517">1</A>, <A HREF="Chap09.htm#Index536">2</A></DL><DIV ALIGN="CENTER"><FONT SIZE="+2"><B><A NAME="IA-G">G</A></B></FONT></P></DIV>
get pointer, <A HREF="Chap05.htm#Index295">1</A>, <A HREF="Chap05.htm#Index319">2</A>, <A HREF="Chap05.htm#Index463">3</A><BR>
<DL><DT>get(&#160;), <A HREF="Chap05.htm#Index230">1</A>, <A HREF="Chap05.htm#Index260">2</A><DD> overloaded versions, <A HREF="Chap05.htm#Index232">1</A><BR>
 with streambuf, <A HREF="Chap05.htm#Index277">1</A></DL>getline(&#160;), <A HREF="Chap05.htm#Index231">1</A>, <A HREF="Chap05.htm#Index265">2</A>, <A HREF="Chap05.htm#Index318">3</A><BR>
good(&#160;), <A HREF="Chap05.htm#Index240">1</A><BR>
<DL><DT>goto<DD> non-local goto, setjmp(&#160;) and longjmp(&#160;), <A HREF="Chap01.htm#Index23">1</A></DL>graphical user interface (GUI), <A HREF="Chap05.htm#Index223">1</A><BR>
Grey, Jan, <A HREF="Chap10.htm#Index621">1</A><BR>
<DL><DT>GUI<DD> graphical user interface, <A HREF="Chap05.htm#Index225">1</A></DL><DIV ALIGN="CENTER"><FONT SIZE="+2"><B><A NAME="IA-H">H</A></B></FONT></P></DIV>
handler, exception, <A HREF="Chap01.htm#Index30">1</A><BR>
hex, <A HREF="Chap05.htm#Index384">1</A><BR>
hex (hexadecimal) in iostreams, <A HREF="Chap05.htm#Index216">1</A><BR>
hex(&#160;), <A HREF="Chap05.htm#Index358">1</A><BR>
hexadecimal, <A HREF="Chap05.htm#Index355">1</A><BR>
<DL><DT>hierarchy<DD> object-based hierarchy, <A HREF="Chap10.htm#Index601">1</A></DL><DIV ALIGN="CENTER"><FONT SIZE="+2"><B><A NAME="IA-I">I</A></B></FONT></P></DIV>
<DL><DT>I/O<DD> C standard library, <A HREF="Chap05.htm#Index353">1</A><BR>
 console, <A HREF="Chap05.htm#Index227">1</A></DL>ifstream, <A HREF="Chap05.htm#Index195">1</A>, <A HREF="Chap05.htm#Index256">2</A>, <A HREF="Chap05.htm#Index275">3</A><BR>
ignore(&#160;), <A HREF="Chap05.htm#Index262">1</A><BR>
<DL><DT>implementation<DD> limits, <A HREF="Part2.htm#Index141">1</A></DL>in-core formatting, <A HREF="Chap05.htm#Index297">1</A><BR>
indexOf(&#160;), <A HREF="Chap11.htm#Index696">1</A><BR>
<DL><DT>inheritance<DD> and design patterns, <A HREF="Chap11.htm#Index649">1</A><BR>
 multiple inheritance (MI), <A HREF="Chap10.htm#Index597">1</A><BR>
 multiple inheritance and run-time type identification, <A HREF="Chap09.htm#Index540">1</A>, <A HREF="Chap09.htm#Index567">2</A>, <A HREF="Chap09.htm#Index580">3</A><BR>
 templates, <A HREF="Chap06.htm#Index480">1</A></DL><DL><DT>input<DD> line at a time, <A HREF="Chap05.htm#Index219">1</A></DL>inserter, <A HREF="Chap05.htm#Index189">1</A><BR>
<DL><DT>interface<DD> command-line, <A HREF="Chap05.htm#Index222">1</A><BR>
 graphical user (GUI), <A HREF="Chap05.htm#Index224">1</A><BR>
 repairing an interface with multiple inheritance, <A HREF="Chap10.htm#Index640">1</A></DL>interpreter, printf(&#160;) run-time, <A HREF="Chap05.htm#Index177">1</A><BR>
<DL><DT>invalid_argument<DD> Standard C++ library exception type, <A HREF="Chap01.htm#Index103">1</A></DL>IOSTREAM.H, <A HREF="Chap05.htm#Index259">1</A><BR>
<DL><DT>iostreams<DD> and Standard C++ library string class, <A HREF="Part2.htm#Index139">1</A><BR>
 applicator, <A HREF="Chap05.htm#Index415">1</A><BR>
 automatic, <A HREF="Chap05.htm#Index364">1</A><BR>
 bad(&#160;), <A HREF="Chap05.htm#Index247">1</A><BR>
 badbit, <A HREF="Chap05.htm#Index253">1</A><BR>
 binary printing, <A HREF="Chap05.htm#Index422">1</A><BR>
 buffering, <A HREF="Chap05.htm#Index270">1</A><BR>
 clear(&#160;), <A HREF="Chap05.htm#Index464">1</A><BR>
 dec, <A HREF="Chap05.htm#Index379">1</A><BR>
 dec (decimal), <A HREF="Chap05.htm#Index213">1</A><BR>
 effectors, <A HREF="Chap05.htm#Index420">1</A><BR>
 endl, <A HREF="Chap05.htm#Index387">1</A><BR>
 ends, <A HREF="Chap05.htm#Index217">1</A><BR>
 eof(&#160;), <A HREF="Chap05.htm#Index243">1</A><BR>
 eofbit, <A HREF="Chap05.htm#Index249">1</A><BR>
 error handling, <A HREF="Chap05.htm#Index238">1</A><BR>
 fail(&#160;), <A HREF="Chap05.htm#Index245">1</A><BR>
 failbit, <A HREF="Chap05.htm#Index251">1</A>, <A HREF="Chap05.htm#Index460">2</A><BR>
 files, <A HREF="Chap05.htm#Index228">1</A><BR>
 fill character, <A HREF="Chap05.htm#Index449">1</A><BR>
 fixed, <A HREF="Chap05.htm#Index405">1</A><BR>
 flush, <A HREF="Chap05.htm#Index210">1</A>, <A HREF="Chap05.htm#Index389">2</A><BR>
 format flags, <A HREF="Chap05.htm#Index337">1</A><BR>
 formatting manipulators, <A HREF="Chap05.htm#Index376">1</A><BR>
 fseek(&#160;), <A HREF="Chap05.htm#Index282">1</A><BR>
 get pointer, <A HREF="Chap05.htm#Index462">1</A><BR>
 get(&#160;), <A HREF="Chap05.htm#Index261">1</A><BR>
 getline(&#160;), <A HREF="Chap05.htm#Index266">1</A><BR>
 good(&#160;), <A HREF="Chap05.htm#Index241">1</A><BR>
 hex, <A HREF="Chap05.htm#Index383">1</A><BR>
 hex (hexadecimal), <A HREF="Chap05.htm#Index215">1</A><BR>
 ignore(&#160;), <A HREF="Chap05.htm#Index263">1</A><BR>
 internal, <A HREF="Chap05.htm#Index403">1</A><BR>
 internal formatting data, <A HREF="Chap05.htm#Index334">1</A><BR>
 ios::app, <A HREF="Chap05.htm#Index312">1</A><BR>
 ios::ate, <A HREF="Chap05.htm#Index311">1</A><BR>
 ios::basefield, <A HREF="Chap05.htm#Index357">1</A><BR>
 ios::beg, <A HREF="Chap05.htm#Index292">1</A><BR>
 ios::cur, <A HREF="Chap05.htm#Index293">1</A><BR>
 ios::dec, <A HREF="Chap05.htm#Index359">1</A><BR>
 ios::end, <A HREF="Chap05.htm#Index294">1</A><BR>
 ios::fill(&#160;), <A HREF="Chap05.htm#Index372">1</A><BR>
 ios::fixed, <A HREF="Chap05.htm#Index363">1</A><BR>
 ios::flags(&#160;), <A HREF="Chap05.htm#Index339">1</A><BR>
 ios::hex, <A HREF="Chap05.htm#Index360">1</A><BR>
 ios::internal, <A HREF="Chap05.htm#Index367">1</A><BR>
 ios::left, <A HREF="Chap05.htm#Index365">1</A><BR>
 ios::oct, <A HREF="Chap05.htm#Index361">1</A><BR>
 ios::out, <A HREF="Chap05.htm#Index310">1</A><BR>
 ios::precision(&#160;), <A HREF="Chap05.htm#Index373">1</A><BR>
 ios::right, <A HREF="Chap05.htm#Index366">1</A><BR>
 ios::scientific, <A HREF="Chap05.htm#Index362">1</A><BR>
 ios::showbase, <A HREF="Chap05.htm#Index343">1</A><BR>
 ios::showpoint, <A HREF="Chap05.htm#Index344">1</A><BR>
 ios::showpos, <A HREF="Chap05.htm#Index346">1</A><BR>
 ios::skipws, <A HREF="Chap05.htm#Index342">1</A><BR>
 ios::stdio, <A HREF="Chap05.htm#Index348">1</A>, <A HREF="Chap05.htm#Index351">2</A><BR>
 ios::unitbuf, <A HREF="Chap05.htm#Index347">1</A><BR>
 ios::uppercase, <A HREF="Chap05.htm#Index345">1</A><BR>
 ios::width(&#160;), <A HREF="Chap05.htm#Index371">1</A><BR>
 left, <A HREF="Chap05.htm#Index401">1</A><BR>
 manipulators, creating, <A HREF="Chap05.htm#Index413">1</A><BR>
 newline, manipulator for, <A HREF="Chap05.htm#Index417">1</A><BR>
 noshowbase, <A HREF="Chap05.htm#Index392">1</A><BR>
 noshowpoint, <A HREF="Chap05.htm#Index398">1</A><BR>
 noshowpos, <A HREF="Chap05.htm#Index394">1</A><BR>
 noskipws, <A HREF="Chap05.htm#Index400">1</A><BR>
 nouppercase, <A HREF="Chap05.htm#Index396">1</A><BR>
 oct (octal), <A HREF="Chap05.htm#Index212">1</A>, <A HREF="Chap05.htm#Index381">2</A><BR>
 open modes, <A HREF="Chap05.htm#Index268">1</A><BR>
 precision(&#160;), <A HREF="Chap05.htm#Index445">1</A><BR>
 rdbuf(&#160;), <A HREF="Chap05.htm#Index274">1</A><BR>
 read(&#160;), <A HREF="Chap05.htm#Index458">1</A><BR>
 read(&#160;) and write(&#160;), <A HREF="Chap10.htm#Index629">1</A><BR>
 resetiosflags, <A HREF="Chap05.htm#Index407">1</A><BR>
 right, <A HREF="Chap05.htm#Index402">1</A><BR>
 scientific, <A HREF="Chap05.htm#Index404">1</A><BR>
 seekg(&#160;), <A HREF="Chap05.htm#Index291">1</A><BR>
 seeking in, <A HREF="Chap05.htm#Index279">1</A><BR>
 seekp(&#160;), <A HREF="Chap05.htm#Index289">1</A><BR>
 setbase, <A HREF="Chap05.htm#Index408">1</A><BR>
 setf(&#160;), <A HREF="Chap05.htm#Index340">1</A>, <A HREF="Chap05.htm#Index443">2</A><BR>
 setfill, <A HREF="Chap05.htm#Index409">1</A><BR>
 setiosflags, <A HREF="Chap05.htm#Index406">1</A><BR>
 setprecision, <A HREF="Chap05.htm#Index410">1</A><BR>
 setw, <A HREF="Chap05.htm#Index411">1</A><BR>
 setw(&#160;), <A HREF="Chap05.htm#Index447">1</A><BR>
 showbase, <A HREF="Chap05.htm#Index391">1</A><BR>
 showpoint, <A HREF="Chap05.htm#Index397">1</A><BR>
 showpos, <A HREF="Chap05.htm#Index393">1</A><BR>
 skipws, <A HREF="Chap05.htm#Index399">1</A><BR>
 tellg(&#160;), <A HREF="Chap05.htm#Index286">1</A><BR>
 tellp(&#160;), <A HREF="Chap05.htm#Index284">1</A><BR>
 unit buffering, <A HREF="Chap05.htm#Index349">1</A><BR>
 uppercase, <A HREF="Chap05.htm#Index395">1</A><BR>
 width, fill and precision, <A HREF="Chap05.htm#Index368">1</A><BR>
 ws, <A HREF="Chap05.htm#Index385">1</A></DL>istream, <A HREF="Chap05.htm#Index193">1</A><BR>
istringstreams, <A HREF="Chap05.htm#Index201">1</A><BR>
istrstream, <A HREF="Chap05.htm#Index198">1</A>, <A HREF="Chap05.htm#Index299">2</A><BR>
iterator, <A HREF="Chap11.htm#Index651">1</A><BR>
<DIV ALIGN="CENTER"><FONT SIZE="+2"><B><A NAME="IA-K">K</A></B></FONT></P></DIV>
<DL><DT>keyword<DD> catch, <A HREF="Chap01.htm#Index31">1</A></DL><DIV ALIGN="CENTER"><FONT SIZE="+2"><B><A NAME="IA-L">L</A></B></FONT></P></DIV>
Lajoie, Jos&eacute;e, <A HREF="Chap09.htm#Index587">1</A><BR>
Lee, Meng, <A HREF="Chap07.htm#Index496">1</A><BR>
<DL><DT>length_error<DD> Standard C++ library exception type, <A HREF="Chap01.htm#Index104">1</A></DL><DL><DT>library<DD> C standard I/O, <A HREF="Chap05.htm#Index354">1</A><BR>
 maintaining class source, <A HREF="Chap05.htm#Index436">1</A><BR>
 standard template library (STL), <A HREF="Chap07.htm#Index493">1</A></DL>limits, implementation, <A HREF="Part2.htm#Index142">1</A><BR>
LIMITS.H, <A HREF="Chap05.htm#Index427">1</A><BR>
line input, <A HREF="Chap05.htm#Index220">1</A><BR>
localtime(&#160;), <A HREF="Chap05.htm#Index451">1</A><BR>
<DL><DT>logic_error<DD> Standard C++ library exception type, <A HREF="Chap01.htm#Index97">1</A></DL>longjmp(&#160;), <A HREF="Chap01.htm#Index25">1</A><BR>
<DIV ALIGN="CENTER"><FONT SIZE="+2"><B><A NAME="IA-M">M</A></B></FONT></P></DIV>
maintaining class library source, <A HREF="Chap05.htm#Index434">1</A><BR>
malloc(&#160;), <A HREF="Chap05.htm#Index327">1</A>, <A HREF="Chap06.htm#Index469">2</A><BR>
<DL><DT>manipulator, <A HREF="Chap05.htm#Index208">1</A><DD> creating, <A HREF="Chap05.htm#Index414">1</A><BR>
 iostreams formatting, <A HREF="Chap05.htm#Index378">1</A></DL><DL><DT>member<DD> member function template, <A HREF="Chap06.htm#Index476">1</A></DL><DL><DT>memory<DD> a memory allocation system, <A HREF="Chap06.htm#Index468">1</A></DL><DL><DT>MI<DD> multiple inheritance, <A HREF="Chap10.htm#Index598">1</A></DL>modes, iostream open, <A HREF="Chap05.htm#Index269">1</A><BR>
modulus operator, <A HREF="Chap05.htm#Index456">1</A><BR>
monolithic, <A HREF="Chap10.htm#Index602">1</A><BR>
multiple dispatching, <A HREF="Chap11.htm#Index679">1</A><BR>
<DL><DT>multiple inheritance, <A HREF="Chap10.htm#Index596">1</A><DD> ambiguity, <A HREF="Chap10.htm#Index610">1</A><BR>
 and exception handling, <A HREF="Chap01.htm#Index126">1</A><BR>
 and run-time type identification, <A HREF="Chap09.htm#Index541">1</A>, <A HREF="Chap09.htm#Index568">2</A>, <A HREF="Chap09.htm#Index581">3</A><BR>
 and upcasting, <A HREF="Chap10.htm#Index623">1</A><BR>
 avoiding, <A HREF="Chap10.htm#Index638">1</A><BR>
 diamonds, <A HREF="Chap10.htm#Index605">1</A><BR>
 duplicate subobjects, <A HREF="Chap10.htm#Index603">1</A><BR>
 most-derived class, <A HREF="Chap10.htm#Index614">1</A><BR>
 overhead, <A HREF="Chap10.htm#Index620">1</A><BR>
 pitfall, <A HREF="Chap10.htm#Index634">1</A><BR>
 repairing an interface, <A HREF="Chap10.htm#Index639">1</A><BR>
 upcasting, <A HREF="Chap10.htm#Index608">1</A><BR>
 virtual base classes, <A HREF="Chap10.htm#Index612">1</A><BR>
 virtual base classes with a default constructor, <A HREF="Chap10.htm#Index617">1</A></DL><DIV ALIGN="CENTER"><FONT SIZE="+2"><B><A NAME="IA-N">N</A></B></FONT></P></DIV>
naked pointers, and exception handling, <A HREF="Chap01.htm#Index75">1</A><BR>
namespace, <A HREF="Chap05.htm#Index428">1</A><BR>
<DL><DT>new, <A HREF="Chap05.htm#Index325">1</A><DD> overloading array new and delete, <A HREF="Chap01.htm#Index66">1</A><BR>
 placement syntax, <A HREF="Chap01.htm#Index69">1</A></DL>newline, <A HREF="Chap05.htm#Index418">1</A><BR>
<DL><DT>non-local goto<DD> setjmp(&#160;) and longjmp(&#160;), <A HREF="Chap01.htm#Index22">1</A></DL>notifyObservers(&#160;), <A HREF="Chap11.htm#Index676">1</A>, <A HREF="Chap11.htm#Index678">2</A><BR>
null references, <A HREF="Chap09.htm#Index559">1</A><BR>
<DL><DT>numerical operations<DD> efficiency using the Standard C++ Numerics library, <A HREF="Part2.htm#Index167">1</A></DL><DIV ALIGN="CENTER"><FONT SIZE="+2"><B><A NAME="IA-O">O</A></B></FONT></P></DIV>
<DL><DT>object<DD> object-based hierarchy, <A HREF="Chap10.htm#Index600">1</A><BR>
 object-oriented database, <A HREF="Chap10.htm#Index625">1</A><BR>
 object-oriented programming, <A HREF="Chap09.htm#Index506">1</A><BR>
 slicing, and exception handling, <A HREF="Chap01.htm#Index82">1</A>, <A HREF="Chap01.htm#Index91">2</A><BR>
 temporary, <A HREF="Chap05.htm#Index424">1</A></DL>Observable, <A HREF="Chap11.htm#Index675">1</A><BR>
observer design pattern, <A HREF="Chap11.htm#Index674">1</A><BR>
oct, <A HREF="Chap05.htm#Index382">1</A><BR>
ofstream, <A HREF="Chap05.htm#Index196">1</A>, <A HREF="Chap05.htm#Index257">2</A><BR>
open modes, iostreams, <A HREF="Chap05.htm#Index267">1</A><BR>
<DL><DT>operator<DD> &gt;&gt;, <A HREF="Chap05.htm#Index190">1</A><BR>
 &lt;&lt;, <A HREF="Chap05.htm#Index188">1</A><BR>
 modulus, <A HREF="Chap05.htm#Index455">1</A><BR>
 operator overloading sneak preview, <A HREF="Chap05.htm#Index185">1</A><BR>
 [], <A HREF="Chap01.htm#Index78">1</A></DL><DL><DT>order<DD> of constructor and destructor calls, <A HREF="Chap09.htm#Index552">1</A></DL>ostream, <A HREF="Chap05.htm#Index194">1</A>, <A HREF="Chap05.htm#Index264">2</A><BR>
ostringstreams, <A HREF="Chap05.htm#Index202">1</A><BR>
ostrstream, <A HREF="Chap05.htm#Index199">1</A>, <A HREF="Chap05.htm#Index300">2</A>, <A HREF="Chap05.htm#Index437">3</A><BR>
<DL><DT>output<DD> stream formatting, <A HREF="Chap05.htm#Index330">1</A><BR>
 strstreams, <A HREF="Chap05.htm#Index308">1</A></DL><DL><DT>out_of_range<DD> Standard C++ library exception type, <A HREF="Chap01.htm#Index105">1</A></DL><DL><DT>overflow_error<DD> Standard C++ library exception type, <A HREF="Chap01.htm#Index115">1</A></DL><DL><DT>overhead<DD> exception handling, <A HREF="Chap01.htm#Index137">1</A><BR>
 multiple inheritance, <A HREF="Chap10.htm#Index619">1</A></DL><DL><DT>overloading<DD> array new and delete , <A HREF="Chap01.htm#Index68">1</A></DL>overview, chapters, <A HREF="Preface.htm#Index2">1</A><BR>
<DIV ALIGN="CENTER"><FONT SIZE="+2"><B><A NAME="IA-P">P</A></B></FONT></P></DIV>
pair template class, <A HREF="Part2.htm#Index152">1</A><BR>
Park, Nick, <A HREF="Chap06.htm#Index475">1</A><BR>
patterns, design patterns, <A HREF="Chap11.htm#Index643">1</A><BR>
perror(&#160;), <A HREF="Chap01.htm#Index19">1</A><BR>
<DL><DT>persistence, <A HREF="Chap10.htm#Index637">1</A><DD> persistent object, <A HREF="Chap10.htm#Index624">1</A></DL><DL><DT>pitfalls<DD> in multiple inheritance, <A HREF="Chap10.htm#Index635">1</A></DL><DL><DT>pointer<DD> finding exact type of a base pointer, <A HREF="Chap09.htm#Index509">1</A><BR>
 pointer to a function, <A HREF="Chap01.htm#Index56">1</A><BR>
 to member, <A HREF="Chap06.htm#Index474">1</A></DL>polymorphism, <A HREF="Chap09.htm#Index572">1</A>, <A HREF="Chap11.htm#Index702">2</A>, <A HREF="Chap11.htm#Index711">3</A><BR>
<DL><DT>precision<DD> width, fill, iostream, <A HREF="Chap05.htm#Index370">1</A></DL>precision(&#160;), <A HREF="Chap05.htm#Index446">1</A><BR>
<DL><DT>preprocessor<DD> stringizing, <A HREF="Chap05.htm#Index374">1</A></DL><DL><DT>printf(&#160;), <A HREF="Chap05.htm#Index174">1</A>, <A HREF="Chap05.htm#Index333">2</A><DD> error code, <A HREF="Chap01.htm#Index14">1</A><BR>
 run-time interpreter, <A HREF="Chap05.htm#Index175">1</A></DL><DL><DT>private<DD> constructor, <A HREF="Chap11.htm#Index654">1</A></DL>programming, object-oriented, <A HREF="Chap09.htm#Index505">1</A><BR>
protected, <A HREF="Chap09.htm#Index584">1</A><BR>
<DL><DT>prototype, <A HREF="Chap11.htm#Index693">1</A><DD> design pattern, <A HREF="Chap11.htm#Index699">1</A></DL>put pointer, <A HREF="Chap05.htm#Index287">1</A><BR>
<DIV ALIGN="CENTER"><FONT SIZE="+2"><B><A NAME="IA-R">R</A></B></FONT></P></DIV>
raise(&#160;), <A HREF="Chap01.htm#Index21">1</A><BR>
rand(&#160;), <A HREF="Chap05.htm#Index453">1</A><BR>
RAND_MAX, <A HREF="Chap05.htm#Index454">1</A><BR>
<DL><DT>range_error<DD> Standard C++ library exception type, <A HREF="Chap01.htm#Index114">1</A></DL>rapid development, <A HREF="Chap06.htm#Index486">1</A><BR>
raw, reading bytes, <A HREF="Chap05.htm#Index234">1</A><BR>
rdbuf(&#160;), <A HREF="Chap05.htm#Index273">1</A><BR>
re-throwing an exception, <A HREF="Chap01.htm#Index47">1</A><BR>
<DL><DT>read(&#160;), <A HREF="Chap05.htm#Index236">1</A>, <A HREF="Chap05.htm#Index459">2</A><DD> iostream read(&#160;) and write(&#160;), <A HREF="Chap10.htm#Index630">1</A></DL>reading raw bytes, <A HREF="Chap05.htm#Index233">1</A><BR>
realloc(&#160;), <A HREF="Chap06.htm#Index471">1</A><BR>
<DL><DT>reference<DD> and exception handling, <A HREF="Chap01.htm#Index80">1</A>, <A HREF="Chap01.htm#Index129">2</A><BR>
 and run-time type identification, <A HREF="Chap09.htm#Index554">1</A><BR>
 null references, <A HREF="Chap09.htm#Index558">1</A></DL>reinterpret_cast, <A HREF="Chap09.htm#Index591">1</A><BR>
reporting errors in book, <A HREF="Preface.htm#Index12">1</A><BR>
<DL><DT>resumption, <A HREF="Chap01.htm#Index42">1</A><DD> termination vs. resumption, exception handling, <A HREF="Chap01.htm#Index35">1</A></DL>root, <A HREF="Chap01.htm#Index128">1</A><BR>
<DL><DT>RTTI<DD> misuse of RTTI, <A HREF="Chap11.htm#Index701">1</A>, <A HREF="Chap11.htm#Index708">2</A></DL>run-time interpreter for printf(&#160;), <A HREF="Chap05.htm#Index176">1</A><BR>
<DL><DT>run-time type identification, <A HREF="Part2.htm#Index145">1</A>, <A HREF="Chap09.htm#Index501">2</A>, <A HREF="Chap10.htm#Index636">3</A><DD> and efficiency, <A HREF="Chap09.htm#Index573">1</A><BR>
 and exception handling, <A HREF="Chap09.htm#Index513">1</A><BR>
 and multiple inheritance, <A HREF="Chap09.htm#Index542">1</A>, <A HREF="Chap09.htm#Index569">2</A>, <A HREF="Chap09.htm#Index582">3</A><BR>
 and nested classes, <A HREF="Chap09.htm#Index534">1</A><BR>
 and references, <A HREF="Chap09.htm#Index555">1</A><BR>
 and templates, <A HREF="Chap09.htm#Index549">1</A><BR>
 and upcasting, <A HREF="Chap09.htm#Index507">1</A><BR>
 and void pointers, <A HREF="Chap09.htm#Index546">1</A><BR>
 bad_cast, <A HREF="Chap09.htm#Index560">1</A><BR>
 bad_typeid, <A HREF="Chap09.htm#Index566">1</A><BR>
 before(&#160;), <A HREF="Chap09.htm#Index523">1</A><BR>
 building your own, <A HREF="Chap09.htm#Index583">1</A><BR>
 casting to intermediate levels, <A HREF="Chap09.htm#Index539">1</A><BR>
 difference between dynamic_cast and typeid(&#160;), <A HREF="Chap09.htm#Index545">1</A><BR>
 dynamic_cast, <A HREF="Chap09.htm#Index528">1</A><BR>
 mechanism &amp; overhead, <A HREF="Chap09.htm#Index575">1</A><BR>
 misuse, <A HREF="Chap09.htm#Index571">1</A><BR>
 RTTI, abbreviation for, <A HREF="Chap09.htm#Index515">1</A><BR>
 shape example, <A HREF="Chap09.htm#Index503">1</A><BR>
 type-safe downcast, <A HREF="Chap09.htm#Index526">1</A><BR>
 typeid(&#160;), <A HREF="Chap09.htm#Index520">1</A><BR>
 typeid(&#160;) and built-in types, <A HREF="Chap09.htm#Index531">1</A><BR>
 typeinfo, <A HREF="Chap09.htm#Index521">1</A>, <A HREF="Chap09.htm#Index579">2</A><BR>
 vendor-defined, <A HREF="Chap09.htm#Index511">1</A><BR>
 VTABLE, <A HREF="Chap09.htm#Index577">1</A><BR>
 when to use it, <A HREF="Chap09.htm#Index570">1</A><BR>
 without virtual functions, <A HREF="Chap09.htm#Index516">1</A>, <A HREF="Chap09.htm#Index535">2</A></DL><DL><DT>runtime_error<DD> Standard C++ library exception type, <A HREF="Chap01.htm#Index98">1</A></DL><DIV ALIGN="CENTER"><FONT SIZE="+2"><B><A NAME="IA-S">S</A></B></FONT></P></DIV>
Schwarz, Jerry, <A HREF="Chap05.htm#Index419">1</A><BR>
sed, <A HREF="Chap05.htm#Index429">1</A><BR>
seekg(&#160;), <A HREF="Chap05.htm#Index290">1</A><BR>
seeking in iostreams, <A HREF="Chap05.htm#Index278">1</A><BR>
seekp(&#160;), <A HREF="Chap05.htm#Index288">1</A><BR>
<DL><DT>serialization, <A HREF="Chap05.htm#Index457">1</A><DD> and persistence, <A HREF="Chap10.htm#Index627">1</A></DL><DL><DT>set<DD> STL set class example, <A HREF="Chap07.htm#Index498">1</A></DL>setChanged(&#160;), <A HREF="Chap11.htm#Index677">1</A><BR>
setf(&#160;), iostreams, <A HREF="Chap05.htm#Index341">1</A>, <A HREF="Chap05.htm#Index444">2</A><BR>
setjmp(&#160;), <A HREF="Chap01.htm#Index24">1</A><BR>
setw(&#160;), <A HREF="Chap05.htm#Index448">1</A><BR>
set_new_handler, <A HREF="Part2.htm#Index144">1</A><BR>
set_terminate(&#160;), <A HREF="Chap01.htm#Index55">1</A><BR>
<DL><DT>set_unexpected(&#160;)<DD>exception handling, <A HREF="Chap01.htm#Index40">1</A></DL><DL><DT>shape<DD> example, and run-time type identification, <A HREF="Chap09.htm#Index504">1</A></DL>signal(&#160;), <A HREF="Chap01.htm#Index20">1</A>, <A HREF="Chap01.htm#Index122">2</A><BR>
simulating virtual constructors, <A HREF="Chap11.htm#Index663">1</A><BR>
singleton, <A HREF="Chap11.htm#Index652">1</A><BR>
<DL><DT>size<DD> sizeof, <A HREF="Chap10.htm#Index632">1</A></DL><DL><DT>slicing<DD> object slicing and exception handling, <A HREF="Chap01.htm#Index83">1</A>, <A HREF="Chap01.htm#Index92">2</A></DL>Smalltalk, <A HREF="Chap10.htm#Index599">1</A><BR>
<DL><DT>sort<DD> bubble sort, <A HREF="Chap06.htm#Index485">1</A></DL><DL><DT>specification<DD> exception, <A HREF="Chap01.htm#Index37">1</A></DL><DL><DT>standard<DD> Standard C, <A HREF="Preface.htm#Index3">1</A><BR>
 Standard C++, <A HREF="Preface.htm#Index8">1</A></DL><DL><DT>Standard C++ libraries<DD> algorithms library, <A HREF="Part2.htm#Index164">1</A><BR>
 bits bit vector, <A HREF="Part2.htm#Index159">1</A><BR>
 bit_string bit vector, <A HREF="Part2.htm#Index161">1</A><BR>
 complex number class, <A HREF="Part2.htm#Index169">1</A><BR>
 containers library, <A HREF="Part2.htm#Index158">1</A><BR>
 diagnostics library, <A HREF="Part2.htm#Index148">1</A><BR>
 general utilities library, <A HREF="Part2.htm#Index151">1</A><BR>
 iterators library, <A HREF="Part2.htm#Index163">1</A><BR>
 language support, <A HREF="Part2.htm#Index140">1</A><BR>
 localization library, <A HREF="Part2.htm#Index156">1</A><BR>
 numerics library, <A HREF="Part2.htm#Index166">1</A><BR>
 standard exception classes, <A HREF="Part2.htm#Index149">1</A><BR>
 standard library exception types, <A HREF="Chap01.htm#Index95">1</A><BR>
 standard template library (STL), <A HREF="Chap07.htm#Index491">1</A><BR>
 string class, <A HREF="Chap05.htm#Index203">1</A></DL><DL><DT>standard template library<DD> operations on, with algorithms, <A HREF="Part2.htm#Index165">1</A><BR>
 set class example, <A HREF="Chap07.htm#Index497">1</A></DL>static_cast, <A HREF="Chap09.htm#Index590">1</A><BR>
stdio, <A HREF="Chap05.htm#Index172">1</A><BR>
STDIO.H, <A HREF="Chap05.htm#Index255">1</A><BR>
Stepanov, Alexander, <A HREF="Chap07.htm#Index495">1</A><BR>
<DL><DT>STL<DD> standard template library, <A HREF="Chap07.htm#Index494">1</A></DL><DL><DT>storage<DD> storage allocation functions for the STL, <A HREF="Part2.htm#Index155">1</A></DL>str(&#160;), strstream, <A HREF="Chap05.htm#Index324">1</A><BR>
<DL><DT>stream, <A HREF="Chap05.htm#Index192">1</A><DD> output formatting, <A HREF="Chap05.htm#Index331">1</A></DL><DL><DT>streambuf, <A HREF="Chap05.htm#Index272">1</A><DD> and get(&#160;), <A HREF="Chap05.htm#Index276">1</A></DL>streampos, moving, <A HREF="Chap05.htm#Index280">1</A><BR>
<DL><DT>String<DD> indexOf(&#160;), <A HREF="Chap11.htm#Index695">1</A><BR>
 Standard C++ library string class, <A HREF="Chap05.htm#Index205">1</A><BR>
 transforming character strings to typed values, <A HREF="Chap05.htm#Index304">1</A><BR>
substring(&#160;), <A HREF="Chap11.htm#Index698">1</A></DL>stringizing, preprocessor, <A HREF="Chap05.htm#Index375">1</A><BR>
<DL><DT>strncpy(&#160;)<DD> Standard C library function strncpy(&#160;), <A HREF="Chap01.htm#Index65">1</A></DL>Stroustrup, Bjarne, <A HREF="Preface.htm#Index1">1</A><BR>
strstr(&#160;), <A HREF="Chap05.htm#Index440">1</A><BR>
<DL><DT>strstream, <A HREF="Chap05.htm#Index296">1</A>, <A HREF="Chap05.htm#Index439">2</A><DD> automatic storage allocation, <A HREF="Chap05.htm#Index320">1</A><BR>
 ends, <A HREF="Chap05.htm#Index316">1</A><BR>
 freezing, <A HREF="Chap05.htm#Index321">1</A><BR>
 output, <A HREF="Chap05.htm#Index309">1</A><BR>
 str(&#160;), <A HREF="Chap05.htm#Index323">1</A><BR>
 user-allocated storage, <A HREF="Chap05.htm#Index301">1</A><BR>
 zero terminator, <A HREF="Chap05.htm#Index313">1</A></DL><DL><DT>strtok(&#160;)<DD> Standard C library function, <A HREF="Chap07.htm#Index500">1</A></DL>structural design patterns, <A HREF="Chap11.htm#Index660">1</A><BR>
<DL><DT>subobject<DD> duplicate subobjects in multiple inheritance, <A HREF="Chap10.htm#Index604">1</A></DL>substring(&#160;), <A HREF="Chap11.htm#Index697">1</A><BR>
<DIV ALIGN="CENTER"><FONT SIZE="+2"><B><A NAME="IA-T">T</A></B></FONT></P></DIV>
tellg(&#160;), <A HREF="Chap05.htm#Index285">1</A><BR>
tellp(&#160;), <A HREF="Chap05.htm#Index283">1</A><BR>
<DL><DT>template<DD> and inheritance, <A HREF="Chap06.htm#Index479">1</A><BR>
 and run-time type identification, <A HREF="Chap09.htm#Index548">1</A><BR>
 controlling instantiation, <A HREF="Chap06.htm#Index490">1</A><BR>
 function templates, <A HREF="Chap06.htm#Index467">1</A><BR>
 in C++, <A HREF="Chap11.htm#Index704">1</A><BR>
 member function template, <A HREF="Chap06.htm#Index478">1</A><BR>
 preventing template bloat, <A HREF="Chap06.htm#Index487">1</A><BR>
 requirements of template classes, <A HREF="Chap06.htm#Index481">1</A><BR>
 standard template library (STL), <A HREF="Chap07.htm#Index492">1</A></DL><DL><DT>temporary<DD> object, <A HREF="Chap05.htm#Index425">1</A></DL><DL><DT>terminate(&#160;), <A HREF="Part2.htm#Index146">1</A><DD> uncaught exceptions, <A HREF="Chap01.htm#Index49">1</A></DL><DL><DT>termination<DD> vs. resumption, exception handling, <A HREF="Chap01.htm#Index34">1</A></DL><DL><DT>terminator<DD> zero for strstream, <A HREF="Chap05.htm#Index315">1</A></DL>throwing an exception, <A HREF="Chap01.htm#Index26">1</A><BR>
toupper(&#160;), <A HREF="Chap05.htm#Index433">1</A><BR>
transforming character strings to typed values, <A HREF="Chap05.htm#Index302">1</A><BR>
try block, <A HREF="Chap01.htm#Index28">1</A><BR>
tuple-making template function, <A HREF="Part2.htm#Index153">1</A><BR>
<DL><DT>type<DD> automatic type conversions and exception handling, <A HREF="Chap01.htm#Index86">1</A><BR>
 built-in types and typeid(&#160;), run-time type identification, <A HREF="Chap09.htm#Index532">1</A><BR>
 finding exact type of a base pointer, <A HREF="Chap09.htm#Index510">1</A><BR>
 new cast syntax, <A HREF="Chap09.htm#Index585">1</A><BR>
 run-time type identification (RTTI), <A HREF="Chap09.htm#Index502">1</A><BR>
 type-safe downcast in run-time type identification, <A HREF="Chap09.htm#Index527">1</A></DL><DL><DT>typeid(&#160;)<DD> and built-in types, run-time type identification, <A HREF="Chap09.htm#Index530">1</A><BR>
 and exceptions, <A HREF="Chap09.htm#Index562">1</A><BR>
 difference between dynamic_cast and typeid(&#160;), run-time type identification, <A HREF="Chap09.htm#Index544">1</A><BR>
 run-time type identification, <A HREF="Chap09.htm#Index519">1</A></DL><DL><DT>typeinfo<DD> run-time type identification, <A HREF="Chap09.htm#Index522">1</A><BR>
 structure, <A HREF="Chap09.htm#Index578">1</A><BR>
 TYPEINFO.H, <A HREF="Chap09.htm#Index553">1</A></DL><DIV ALIGN="CENTER"><FONT SIZE="+2"><B><A NAME="IA-U">U</A></B></FONT></P></DIV>
ULONG_MAX, <A HREF="Chap05.htm#Index426">1</A><BR>
uncaught exceptions, <A HREF="Chap01.htm#Index50">1</A><BR>
<DL><DT>unexpected(&#160;), <A HREF="Part2.htm#Index147">1</A><DD> exception handling, <A HREF="Chap01.htm#Index38">1</A></DL>unit buffering, iostream, <A HREF="Chap05.htm#Index350">1</A><BR>
Unix, <A HREF="Chap05.htm#Index431">1</A><BR>
<DL><DT>upcasting<DD> and multiple inheritance, <A HREF="Chap10.htm#Index607">1</A>, <A HREF="Chap10.htm#Index622">2</A><BR>
 and run-time type identification, <A HREF="Chap09.htm#Index508">1</A></DL>Urlocker, Zack, <A HREF="Chap10.htm#Index641">1</A><BR>
<DIV ALIGN="CENTER"><FONT SIZE="+2"><B><A NAME="IA-V">V</A></B></FONT></P></DIV>
<DL><DT>value<DD> transforming character strings to typed values, <A HREF="Chap05.htm#Index305">1</A></DL><DL><DT>variable<DD> variable argument list, <A HREF="Chap05.htm#Index183">1</A></DL>vector of change, <A HREF="Chap11.htm#Index646">1</A>, <A HREF="Chap11.htm#Index690">2</A>, <A HREF="Chap11.htm#Index710">3</A><BR>
vendor-defined run-time type identification, <A HREF="Chap09.htm#Index512">1</A><BR>
<DL><DT>virtual<DD> run-time type identification without virtual functions, <A HREF="Chap09.htm#Index518">1</A>, <A HREF="Chap09.htm#Index537">2</A><BR>
 simulating virtual constructors, <A HREF="Chap11.htm#Index664">1</A><BR>
 virtual base classes, <A HREF="Chap10.htm#Index611">1</A><BR>
 virtual base classes with a default constructor, <A HREF="Chap10.htm#Index616">1</A><BR>
 virtual functions inside constructors, <A HREF="Chap11.htm#Index666">1</A></DL>visitor pattern, <A HREF="Chap11.htm#Index683">1</A><BR>
<DL><DT>void<DD> void pointers and run-time type identification, <A HREF="Chap09.htm#Index547">1</A></DL><DL><DT>volatile<DD> casting away const and/or volatile, <A HREF="Chap09.htm#Index595">1</A></DL>VPTR, <A HREF="Chap10.htm#Index633">1</A>, <A HREF="Chap11.htm#Index669">2</A><BR>
<DL><DT>VTABLE, <A HREF="Chap11.htm#Index668">1</A><DD> and run-time type identification, <A HREF="Chap09.htm#Index576">1</A></DL><DIV ALIGN="CENTER"><FONT SIZE="+2"><B><A NAME="IA-W">W</A></B></FONT></P></DIV>
wrapping, class, <A HREF="Chap05.htm#Index170">1</A><BR>
<DL><DT>write(&#160;), <A HREF="Chap05.htm#Index237">1</A><DD> iostream read(&#160;) and write(&#160;), <A HREF="Chap10.htm#Index631">1</A></DL>ws, <A HREF="Chap05.htm#Index386">1</A><BR>
<DIV ALIGN="CENTER"><FONT SIZE="+2"><B><A NAME="IA-Z">Z</A></B></FONT></P></DIV>
zero terminator, strstream, <A HREF="Chap05.htm#Index314">1</A><BR>

</BODY>
</HTML>
